<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\GY91APP.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\GY91APP.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Wed Aug 02 20:11:50 2023
<BR><P>
<H3>Maximum Stack Usage =      10288 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
ui_Heat_Run &rArr; ui_Heat_InitDisp &rArr; BrushHeatMap &rArr; ColorConverter2 &rArr; __aeabi_fmul
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[d7]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[33]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[33]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[33]">ADC1_2_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[50]">ADC3_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[1b]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[36]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[37]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[2c]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[2d]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[2e]">DMA1_Channel3_IRQHandler</a> from gps.o(i.DMA1_Channel3_IRQHandler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[2f]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[30]">DMA1_Channel5_IRQHandler</a> from hcbt20.o(i.DMA1_Channel5_IRQHandler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[31]">DMA1_Channel6_IRQHandler</a> from uart.o(i.DMA1_Channel6_IRQHandler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[32]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[59]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[5a]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[5b]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[5c]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[1e]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[7]">EP1_IN_Callback</a> from usb_endp.o(i.EP1_IN_Callback) referenced 2 times from usb_istr.o(.data)
 <LI><a href="#[9]">EP2_OUT_Callback</a> from usb_endp.o(i.EP2_OUT_Callback) referenced 2 times from usb_istr.o(.data)
 <LI><a href="#[72]">ERROR_Answer</a> from hcbt20.o(i.ERROR_Answer) referenced from hcbt20.o(i.BT_CmdList_Init)
 <LI><a href="#[27]">EXTI0_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[49]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[28]">EXTI1_IRQHandler</a> from ft6336u.o(i.EXTI1_IRQHandler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[29]">EXTI2_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[2a]">EXTI3_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[2b]">EXTI4_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[38]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[25]">FLASH_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[51]">FSMC_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[76]">Get_Max_Lun</a> from usb_prop.o(i.Get_Max_Lun) referenced from usb_prop.o(i.MASS_Data_Setup)
 <LI><a href="#[6b]">HC_AUTOSEND_Answer</a> from hcbt20.o(i.HC_AUTOSEND_Answer) referenced from hcbt20.o(i.BT_CmdList_Init)
 <LI><a href="#[66]">HC_BAT_Answer</a> from hcbt20.o(i.HC_BAT_Answer) referenced from hcbt20.o(i.BT_CmdList_Init)
 <LI><a href="#[6c]">HC_CTRL_Answer</a> from hcbt20.o(i.HC_CTRL_Answer) referenced from hcbt20.o(i.BT_CmdList_Init)
 <LI><a href="#[69]">HC_DIR_Answer</a> from hcbt20.o(i.HC_DIR_Answer) referenced from hcbt20.o(i.BT_CmdList_Init)
 <LI><a href="#[65]">HC_INFO_Answer</a> from hcbt20.o(i.HC_INFO_Answer) referenced from hcbt20.o(i.BT_CmdList_Init)
 <LI><a href="#[71]">HC_JGJHIST_Answer</a> from hcbt20.o(i.HC_JGJHIST_Answer) referenced from hcbt20.o(i.BT_CmdList_Init)
 <LI><a href="#[70]">HC_JGJRT_Answer</a> from hcbt20.o(i.HC_JGJRT_Answer) referenced from hcbt20.o(i.BT_CmdList_Init)
 <LI><a href="#[67]">HC_MEM_Answer</a> from hcbt20.o(i.HC_MEM_Answer) referenced from hcbt20.o(i.BT_CmdList_Init)
 <LI><a href="#[6f]">HC_QUICKHIST_Answer</a> from hcbt20.o(i.HC_QUICKHIST_Answer) referenced from hcbt20.o(i.BT_CmdList_Init)
 <LI><a href="#[6e]">HC_QUICKRT_Answer</a> from hcbt20.o(i.HC_QUICKRT_Answer) referenced from hcbt20.o(i.BT_CmdList_Init)
 <LI><a href="#[6a]">HC_RDFILE_Answer</a> from hcbt20.o(i.HC_RDFILE_Answer) referenced from hcbt20.o(i.BT_CmdList_Init)
 <LI><a href="#[6d]">HC_SYSPARA_Answer</a> from hcbt20.o(i.HC_SYSPARA_Answer) referenced from hcbt20.o(i.BT_CmdList_Init)
 <LI><a href="#[68]">HC_TEMP_Answer</a> from hcbt20.o(i.HC_TEMP_Answer) referenced from hcbt20.o(i.BT_CmdList_Init)
 <LI><a href="#[19]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[41]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[40]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[43]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[42]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[e]">MASS_Data_Setup</a> from usb_prop.o(i.MASS_Data_Setup) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[12]">MASS_GetConfigDescriptor</a> from usb_prop.o(i.MASS_GetConfigDescriptor) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[11]">MASS_GetDeviceDescriptor</a> from usb_prop.o(i.MASS_GetDeviceDescriptor) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[13]">MASS_GetStringDescriptor</a> from usb_prop.o(i.MASS_GetStringDescriptor) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[10]">MASS_Get_Interface_Setting</a> from usb_prop.o(i.MASS_Get_Interface_Setting) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[f]">MASS_NoData_Setup</a> from usb_prop.o(i.MASS_NoData_Setup) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[b]">MASS_Reset</a> from usb_prop.o(i.MASS_Reset) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[c]">MASS_Status_In</a> from usb_prop.o(i.MASS_Status_In) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[d]">MASS_Status_Out</a> from usb_prop.o(i.MASS_Status_Out) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[a]">MASS_init</a> from usb_prop.o(i.MASS_init) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[15]">Mass_Storage_ClearFeature</a> from usb_prop.o(i.Mass_Storage_ClearFeature) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[14]">Mass_Storage_SetConfiguration</a> from usb_prop.o(i.Mass_Storage_SetConfiguration) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[16]">Mass_Storage_SetDeviceAddress</a> from usb_prop.o(i.Mass_Storage_SetDeviceAddress) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[1a]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[18]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[8]">NOP_Process</a> from usb_core.o(i.NOP_Process) referenced 36 times from usb_istr.o(.data)
 <LI><a href="#[22]">PVD_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[1f]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[26]">RCC_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[4a]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[24]">RTC_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[17]">Reset_Handler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[52]">SDIO_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[44]">SPI1_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[45]">SPI2_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[54]">SPI3_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[1d]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[74]">Standard_GetConfiguration</a> from usb_core.o(i.Standard_GetConfiguration) referenced from usb_core.o(i.Data_Setup0)
 <LI><a href="#[75]">Standard_GetInterface</a> from usb_core.o(i.Standard_GetInterface) referenced from usb_core.o(i.Data_Setup0)
 <LI><a href="#[73]">Standard_GetStatus</a> from usb_core.o(i.Standard_GetStatus) referenced from usb_core.o(i.Data_Setup0)
 <LI><a href="#[20]">SysTick_Handler</a> from systic.o(i.SysTick_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[5d]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_xl.o(.text)
 <LI><a href="#[23]">TAMPER_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[39]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[3c]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[3b]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[3a]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[3d]">TIM2_IRQHandler</a> from timer.o(i.TIM2_IRQHandler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[3e]">TIM3_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[3f]">TIM4_IRQHandler</a> from timer.o(i.TIM4_IRQHandler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[53]">TIM5_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[57]">TIM6_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[58]">TIM7_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[4c]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[4f]">TIM8_CC_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[4e]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[4d]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[55]">UART4_IRQHandler</a> from uart.o(i.UART4_IRQHandler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[56]">UART5_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[46]">USART1_IRQHandler</a> from hcbt20.o(i.USART1_IRQHandler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[47]">USART2_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[48]">USART3_IRQHandler</a> from gps.o(i.USART3_IRQHandler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[4b]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[34]">USB_HP_CAN1_TX_IRQHandler</a> from stm32f10x_it.o(i.USB_HP_CAN1_TX_IRQHandler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[35]">USB_LP_CAN1_RX0_IRQHandler</a> from stm32f10x_it.o(i.USB_LP_CAN1_RX0_IRQHandler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[1c]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[21]">WWDG_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[97]">__main</a> from __main.o(!!!main) referenced from startup_stm32f10x_xl.o(.text)
 <LI><a href="#[64]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[60]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[62]">_sbackspace</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[61]">_sgetc</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[5f]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
 <LI><a href="#[4]">get_pymb</a> from pyinput.o(i.get_pymb) referenced 2 times from pyinput.o(.data)
 <LI><a href="#[63]">isspace</a> from isspace.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[5]">my_mem_init</a> from malloc.o(i.my_mem_init) referenced 2 times from malloc.o(.data)
 <LI><a href="#[6]">my_mem_perused</a> from malloc.o(i.my_mem_perused) referenced 2 times from malloc.o(.data)
 <LI><a href="#[89]">ui_Analyze_InitDisp</a> from ui_analyze.o(i.ui_Analyze_InitDisp) referenced from config_ui.o(.constdata)
 <LI><a href="#[8a]">ui_Analyze_Run</a> from ui_analyze.o(i.ui_Analyze_Run) referenced from config_ui.o(.constdata)
 <LI><a href="#[8f]">ui_Biaoding_InitDisp</a> from ui_biaoding.o(i.ui_Biaoding_InitDisp) referenced from config_ui.o(.constdata)
 <LI><a href="#[90]">ui_Biaoding_Run</a> from ui_biaoding.o(i.ui_Biaoding_Run) referenced from config_ui.o(.constdata)
 <LI><a href="#[81]">ui_Browse10_InitDisp</a> from ui_browse10.o(i.ui_Browse10_InitDisp) referenced from config_ui.o(.constdata)
 <LI><a href="#[82]">ui_Browse10_Run</a> from ui_browse10.o(i.ui_Browse10_Run) referenced from config_ui.o(.constdata)
 <LI><a href="#[8d]">ui_Condition_InitDisp</a> from ui_condition.o(i.ui_Condition_InitDisp) referenced from config_ui.o(.constdata)
 <LI><a href="#[8e]">ui_Condition_Run</a> from ui_condition.o(i.ui_Condition_Run) referenced from config_ui.o(.constdata)
 <LI><a href="#[91]">ui_Gain_InitDisp</a> from ui_gain.o(i.ui_Gain_InitDisp) referenced from config_ui.o(.constdata)
 <LI><a href="#[92]">ui_Gain_Run</a> from ui_gain.o(i.ui_Gain_Run) referenced from config_ui.o(.constdata)
 <LI><a href="#[93]">ui_Heat_InitDisp</a> from ui_heat.o(i.ui_Heat_InitDisp) referenced from config_ui.o(.constdata)
 <LI><a href="#[94]">ui_Heat_Run</a> from ui_heat.o(i.ui_Heat_Run) referenced from config_ui.o(.constdata)
 <LI><a href="#[79]">ui_Main_InitDisp</a> from ui_main.o(i.ui_Main_InitDisp) referenced from config_ui.o(.constdata)
 <LI><a href="#[7a]">ui_Main_Run</a> from ui_main.o(i.ui_Main_Run) referenced from config_ui.o(.constdata)
 <LI><a href="#[85]">ui_Paraset10_InitDisp</a> from ui_paraset10.o(i.ui_Paraset10_InitDisp) referenced from config_ui.o(.constdata)
 <LI><a href="#[86]">ui_Paraset10_Run</a> from ui_paraset10.o(i.ui_Paraset10_Run) referenced from config_ui.o(.constdata)
 <LI><a href="#[7f]">ui_SampBlock_InitDisp</a> from ui_sampblock.o(i.ui_SampBlock_InitDisp) referenced from config_ui.o(.constdata)
 <LI><a href="#[80]">ui_SampBlock_Run</a> from ui_sampblock.o(i.ui_SampBlock_Run) referenced from config_ui.o(.constdata)
 <LI><a href="#[7d]">ui_SampJGJ_InitDisp</a> from ui_sampjgj.o(i.ui_SampJGJ_InitDisp) referenced from config_ui.o(.constdata)
 <LI><a href="#[7e]">ui_SampJGJ_Run</a> from ui_sampjgj.o(i.ui_SampJGJ_Run) referenced from config_ui.o(.constdata)
 <LI><a href="#[8b]">ui_Sampdisp_InitDisp</a> from ui_sampdisp.o(i.ui_Sampdisp_InitDisp) referenced from config_ui.o(.constdata)
 <LI><a href="#[8c]">ui_Sampdisp_Run</a> from ui_sampdisp.o(i.ui_Sampdisp_Run) referenced from config_ui.o(.constdata)
 <LI><a href="#[7b]">ui_Sample10_InitDisp</a> from ui_sample10.o(i.ui_Sample10_InitDisp) referenced from config_ui.o(.constdata)
 <LI><a href="#[7c]">ui_Sample10_Run</a> from ui_sample10.o(i.ui_Sample10_Run) referenced from config_ui.o(.constdata)
 <LI><a href="#[87]">ui_Sampset_InitDisp</a> from ui_sampset.o(i.ui_Sampset_InitDisp) referenced from config_ui.o(.constdata)
 <LI><a href="#[88]">ui_Sampset_Run</a> from ui_sampset.o(i.ui_Sampset_Run) referenced from config_ui.o(.constdata)
 <LI><a href="#[77]">ui_Start_InitDisp</a> from ui_start.o(i.ui_Start_InitDisp) referenced from config_ui.o(.constdata)
 <LI><a href="#[78]">ui_Start_Run</a> from ui_start.o(i.ui_Start_Run) referenced from config_ui.o(.constdata)
 <LI><a href="#[83]">ui_Verify_InitDisp</a> from ui_verify.o(i.ui_Verify_InitDisp) referenced from config_ui.o(.constdata)
 <LI><a href="#[84]">ui_Verify_Run</a> from ui_verify.o(i.ui_Verify_Run) referenced from config_ui.o(.constdata)
 <LI><a href="#[95]">ui_View_InitDisp</a> from ui_view.o(i.ui_View_InitDisp) referenced from config_ui.o(.constdata)
 <LI><a href="#[96]">ui_View_Run</a> from ui_view.o(i.ui_View_Run) referenced from config_ui.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[97]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[98]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[9a]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[392]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[393]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[394]"></a>__decompress</STRONG> (Thumb, 100 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[395]"></a>__decompress2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[396]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[9b]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[b9]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[9d]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[9f]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[397]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[a9]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[398]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[399]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[39a]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[39b]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[39c]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[39d]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[a3]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[39e]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[39f]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[a4]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[3a0]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[3a1]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[3a2]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[3a3]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[3a4]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[3a5]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[3a6]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[3a7]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[3a8]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[3a9]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[3aa]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[3ab]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[3ac]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[ae]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[3ad]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[3ae]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[3af]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[3b0]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[3b1]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[3b2]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[3b3]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[99]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[3b4]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[a6]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a8]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[3b5]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[aa]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 4800 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3b6]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[df]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[ad]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[3b7]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[af]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[17]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[d7]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f10x_xl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3b8]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_OnePageFiles
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Data
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSaveDataCnt
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCarDist
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePouMian
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBoXing
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMianPage
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMian
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXingPage
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXing
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSysPara
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums_Center
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataView_Fun
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaOptions
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSourceDataFile
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_RealSendFile
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSampFile
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Location_Data
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowBMP
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNnNums
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SetGJNameNext
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTime
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTempera
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispDate
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBattery
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNameShort
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_View_Run
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_View_InitDisp
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_InitDisp
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarCnt_Sub
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarCnt_Dif
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DifAimFunc
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyzeCoverData_Sub
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOpt
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialogParaDisp
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero_Init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectFileOpt
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJPreView
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewInit
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataOrigRefresh
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileList
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileHighLight
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteSelFile
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockDataViewBro_Fun
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlockFile
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispClickRebarInfo
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBlockDist
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataView_Fun
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveJGJFile
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_TEMP_Answer
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_SYSPARA_Answer
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_RDFILE_Answer
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_QUICKRT_Answer
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_QUICKHIST_Answer
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_MEM_Answer
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_JGJRT_Answer
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_JGJHIST_Answer
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_INFO_Answer
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_DIR_Answer
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CTRL_Answer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_BAT_Answer
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_AUTOSEND_Answer
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERROR_Answer
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SendAT
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CmdUnpack
</UL>

<P><STRONG><a name="[b4]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[b5]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[b3]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[9e]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[b7]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[ba]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_QUICKHIST_Answer
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_JGJHIST_Answer
</UL>

<P><STRONG><a name="[12c]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetName
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Location_Data
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNameShort
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_DIR_Answer
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_AUTOSEND_Answer
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsRecvATOK
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CmdUnpack
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CmdMatch
</UL>

<P><STRONG><a name="[36a]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_unioem
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_font
</UL>

<P><STRONG><a name="[12e]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetName
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText_Center
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePouMian
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBoXing
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMianPage
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMian
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXingPage
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXing
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums_Center
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaOptions
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSourceDataFile
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SetGJNameNext
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_BrushMenuOneBtn
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNameShort
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJPreView
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_TEMP_Answer
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_SYSPARA_Answer
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_QUICKRT_Answer
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_QUICKHIST_Answer
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_MEM_Answer
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_JGJRT_Answer
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_JGJHIST_Answer
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_INFO_Answer
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_DIR_Answer
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CTRL_Answer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_BAT_Answer
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_AUTOSEND_Answer
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERROR_Answer
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SendAT
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CmdUnpack
</UL>

<P><STRONG><a name="[216]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNameShort
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_SYSPARA_Answer
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_QUICKRT_Answer
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_QUICKHIST_Answer
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_JGJRT_Answer
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_JGJHIST_Answer
</UL>

<P><STRONG><a name="[f5]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetName
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushMZJ
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Biaoding_Fun
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetInit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiInit
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZBiaoDing
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetInit
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetFun
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaSet_Init
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaOptions
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Location_Data
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeSetDialog
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectDialog
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_InitDisp
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_InitDisp
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_InitDisp
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_InitDisp
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_InitDisp
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_InitDisp
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_InitDisp
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_InitDisp
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarResult
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneChRebarResult
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero_Init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPageInit
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewInit
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_Block
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Init
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel6_IRQHandler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CTRL_Answer
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CmdUnpack
</UL>

<P><STRONG><a name="[bd]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[3b9]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSignalData
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSysPara
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Biaoding_Fun
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetInit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiInit
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZBiaoDing
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetInit
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetFun
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaSet_Init
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_MZK
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_HD
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeSetDialog
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectDialog
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_InitDisp
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_InitDisp
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_InitDisp
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_InitDisp
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_InitDisp
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_InitDisp
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_InitDisp
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_InitDisp
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubAimFunc
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAdcDataBuf
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarResult
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarCnt_Sub
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarCnt_Dif
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSourceData
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaSet_Init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPageInit
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewInit
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileList
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileHighLight
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_Block
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Init
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_JGJ
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CheckBaud
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[3ba]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[3bb]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[3bc]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaOptions
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialogParaDisp
</UL>

<P><STRONG><a name="[24e]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowBMP
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_InitDisp
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarResult
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
</UL>

<P><STRONG><a name="[c1]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[c0]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[101]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushHeatMap
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimPara
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_MZK
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_HD
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Location_Data
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_InitDisp
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarParaCH3
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarParaCH2
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarParaCH1
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarResult
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneChRebarResult
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FilterHandler_Sum
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FilterHandler_Sub_Dif
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountMZKBuffer
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_Block
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_JGJ
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearJGJBuf
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_DIR_Answer
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CmdUnpack
</UL>

<P><STRONG><a name="[3bd]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[3be]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[36c]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[3bf]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3c0]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3c1]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3c2]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[3c3]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[3c4]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[3c5]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __read_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
</UL>

<P><STRONG><a name="[c4]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
</UL>

<P><STRONG><a name="[b6]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[3c6]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[b2]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[5f]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[ce]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[cf]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[a0]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[d2]"></a>__strtod_int</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
</UL>

<P><STRONG><a name="[bc]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[3c7]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3c8]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[a2]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[ca]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[63]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isspace &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[cd]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[61]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[62]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[d4]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[c6]"></a>_btod_etento</STRONG> (Thumb, 216 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[a7]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[d5]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[db]"></a>_scanf_really_real</STRONG> (Thumb, 668 bytes, Stack size 120 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>

<P><STRONG><a name="[ac]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[e0]"></a>_scanf_really_hex_real</STRONG> (Thumb, 778 bytes, Stack size 80 bytes, scanf_hexfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _scanf_really_hex_real &rArr; __support_ldexp &rArr; ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
</UL>

<P><STRONG><a name="[391]"></a>_scanf_really_infnan</STRONG> (Thumb, 292 bytes, Stack size 72 bytes, scanf_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _scanf_really_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
</UL>

<P><STRONG><a name="[e1]"></a>__aeabi_llsl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[3c9]"></a>_ll_shift_l</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[e4]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[e3]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[e7]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[e5]"></a>_e2d</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, btod.o(CL$$btod_e2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
</UL>

<P><STRONG><a name="[e6]"></a>_e2e</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>

<P><STRONG><a name="[c8]"></a>_btod_ediv</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[da]"></a>_btod_edivd</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_edivd))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _btod_edivd &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[c9]"></a>_btod_emul</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[d9]"></a>_btod_emuld</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_emuld))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _btod_emuld &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[e8]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[151]"></a>ADC_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_Adc_Init
</UL>

<P><STRONG><a name="[e9]"></a>ADC_DeInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32f10x_adc.o(i.ADC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_Adc_Init
</UL>

<P><STRONG><a name="[eb]"></a>ADC_Filter</STRONG> (Thumb, 140 bytes, Stack size 184 bytes, batadc.o(i.ADC_Filter))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = ADC_Filter &rArr; Get_ADC_Value &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ADC_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Voltage
</UL>

<P><STRONG><a name="[155]"></a>ADC_GetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_Adc_Init
</UL>

<P><STRONG><a name="[21f]"></a>ADC_GetConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetConversionValue))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ADC_Value
</UL>

<P><STRONG><a name="[21e]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ADC_Value
</UL>

<P><STRONG><a name="[153]"></a>ADC_GetResetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetResetCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_Adc_Init
</UL>

<P><STRONG><a name="[150]"></a>ADC_Init</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f10x_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_Adc_Init
</UL>

<P><STRONG><a name="[21c]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, stm32f10x_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ADC_Value
</UL>

<P><STRONG><a name="[152]"></a>ADC_ResetCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_ResetCalibration))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_Adc_Init
</UL>

<P><STRONG><a name="[21d]"></a>ADC_SoftwareStartConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_SoftwareStartConvCmd))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ADC_Value
</UL>

<P><STRONG><a name="[154]"></a>ADC_StartCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_StartCalibration))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_Adc_Init
</UL>

<P><STRONG><a name="[ed]"></a>About_Fun</STRONG> (Thumb, 752 bytes, Stack size 88 bytes, ui_paraset10.o(i.About_Fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 4608 + Unknown Stack Size
<LI>Call Chain = About_Fun &rArr; Get_FatFreePrcnt &rArr; exf_getfree &rArr; f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_ManualStart
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Location_Data
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouchSta
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_FatFreePrcnt
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
</UL>

<P><STRONG><a name="[fd]"></a>AdcFilter</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, aimlib.o(i.AdcFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = AdcFilter &rArr; FilterHandler_Sub_Dif &rArr; SourceBufGetData
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FilterHandler_Sum
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FilterHandler_Sub_Dif
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_MZK
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_HD
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_Block
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_JGJ
</UL>

<P><STRONG><a name="[100]"></a>AimFuncRun_Block</STRONG> (Thumb, 132 bytes, Stack size 160 bytes, aimlib.o(i.AimFuncRun_Block))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = AimFuncRun_Block &rArr; AimRebarSub &rArr; SubAimFunc &rArr; GetRebarCnt_Dif &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAdcDataBuf
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReflashRedDot
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarResult
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarSum
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarSub
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarDif
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarAnanlze_Sub
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcFilter
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
</UL>

<P><STRONG><a name="[109]"></a>AimFuncRun_HD</STRONG> (Thumb, 206 bytes, Stack size 168 bytes, aimlib.o(i.AimFuncRun_HD))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = AimFuncRun_HD &rArr; AimRebarSub &rArr; SubAimFunc &rArr; GetRebarCnt_Dif &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRebarCnt
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAdcDataBuf
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReflashRedDot
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarResult
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRebarTiaoXing
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRebarPouMian
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRebarBoXing
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarSum
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarSub
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarDif
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarAnanlze_Sub
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcFilter
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
</UL>

<P><STRONG><a name="[10e]"></a>AimFuncRun_JGJ</STRONG> (Thumb, 110 bytes, Stack size 168 bytes, aimlib.o(i.AimFuncRun_JGJ))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = AimFuncRun_JGJ &rArr; GetRebarResult &rArr; GetOneChRebarResult &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAdcDataBuf
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarResult
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarMZK
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarAnanlze_MZK
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcFilter
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
</UL>

<P><STRONG><a name="[111]"></a>AimFuncRun_MZK</STRONG> (Thumb, 174 bytes, Stack size 168 bytes, aimlib.o(i.AimFuncRun_MZK))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = AimFuncRun_MZK &rArr; DispRebarPouMian &rArr; BrushPouMian &rArr; LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRebarCnt
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAdcDataBuf
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarResult
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRebarPouMian
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRebarBoXing
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarMZK
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarAnanlze_MZK
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcFilter
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
</UL>

<P><STRONG><a name="[110]"></a>AimRebarAnanlze_MZK</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, aimlib.o(i.AimRebarAnanlze_MZK))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = AimRebarAnanlze_MZK &rArr; AnalyzeCoverData_MZK &rArr; InitAimRebarParaCH3 &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyzeCoverData_MZK
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_MZK
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_JGJ
</UL>

<P><STRONG><a name="[107]"></a>AimRebarAnanlze_Sub</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, aimlib.o(i.AimRebarAnanlze_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = AimRebarAnanlze_Sub &rArr; AnalyzeCoverData_Sub &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyzeCoverData_Sub
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_HD
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_Block
</UL>

<P><STRONG><a name="[106]"></a>AimRebarDif</STRONG> (Thumb, 316 bytes, Stack size 24 bytes, aimlib.o(i.AimRebarDif))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = AimRebarDif &rArr; DifAimFunc &rArr; FindCoverTab_Sum &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DifAimFunc
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountSecDifBuffer
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountDifBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_HD
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_Block
</UL>

<P><STRONG><a name="[10f]"></a>AimRebarMZK</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, aimlib.o(i.AimRebarMZK))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = AimRebarMZK &rArr; MZKAimFunc &rArr; FindCoverTab_Sum &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MZKAimFunc
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountMZKBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_MZK
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_JGJ
</UL>

<P><STRONG><a name="[105]"></a>AimRebarSub</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, aimlib.o(i.AimRebarSub))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = AimRebarSub &rArr; SubAimFunc &rArr; GetRebarCnt_Dif &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubAimFunc
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountSubBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_HD
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_Block
</UL>

<P><STRONG><a name="[104]"></a>AimRebarSum</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, aimlib.o(i.AimRebarSum))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = AimRebarSum &rArr; CountSumBuffer &rArr; FindCoverTab_Sum &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountSumBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_HD
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_Block
</UL>

<P><STRONG><a name="[112]"></a>AnalyzeCoverData_MZK</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, aimlib.o(i.AnalyzeCoverData_MZK))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = AnalyzeCoverData_MZK &rArr; InitAimRebarParaCH3 &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarParaCH3
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarParaCH2
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarParaCH1
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarAnanlze_MZK
</UL>

<P><STRONG><a name="[113]"></a>AnalyzeCoverData_Sub</STRONG> (Thumb, 906 bytes, Stack size 88 bytes, aimlib.o(i.AnalyzeCoverData_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = AnalyzeCoverData_Sub &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarParaCH3
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarParaCH2
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarParaCH1
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarAnanlze_Sub
</UL>

<P><STRONG><a name="[11f]"></a>AoTuMianSetFun</STRONG> (Thumb, 1196 bytes, Stack size 88 bytes, ui_condition.o(i.AoTuMianSetFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = AoTuMianSetFun &rArr; iNumInputDialog &rArr; ClearTouchSta &rArr; ui_ButtonTask &rArr; Get_Touch_Res &rArr; Touch_Scan &rArr; TP_Scan &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetInit
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_DesignArea_Touch
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouchSta
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_Run
</UL>

<P><STRONG><a name="[124]"></a>AoTuMianSetInit</STRONG> (Thumb, 720 bytes, Stack size 80 bytes, ui_condition.o(i.AoTuMianSetInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = AoTuMianSetInit &rArr; LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetFun
</UL>

<P><STRONG><a name="[358]"></a>BKLedOffCnt_Reset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, systic.o(i.BKLedOffCnt_Reset))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
</UL>

<P><STRONG><a name="[126]"></a>BKLightDisp</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, ui_paraset10.o(i.BKLightDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = BKLightDisp &rArr; LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPageInit
</UL>

<P><STRONG><a name="[29a]"></a>BKP_TamperPinCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_bkp.o(i.BKP_TamperPinCmd))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_Init
</UL>

<P><STRONG><a name="[127]"></a>BT_CheckBaud</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, hcbt20.o(i.BT_CheckBaud))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = BT_CheckBaud &rArr; BT_IsModelValid &rArr; BT_SendAT &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_UART_Init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Sleep_ms
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsModelValid
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetBaud
</UL>

<P><STRONG><a name="[13b]"></a>BT_CmdList_Init</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, hcbt20.o(i.BT_CmdList_Init))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
</UL>

<P><STRONG><a name="[12b]"></a>BT_CmdMatch</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, hcbt20.o(i.BT_CmdMatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = BT_CmdMatch &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Lookup
</UL>

<P><STRONG><a name="[12d]"></a>BT_CmdUnpack</STRONG> (Thumb, 342 bytes, Stack size 24 bytes, hcbt20.o(i.BT_CmdUnpack))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = BT_CmdUnpack &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Lookup
</UL>

<P><STRONG><a name="[12f]"></a>BT_DMASend</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hcbt20.o(i.BT_DMASend))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BT_DMASend
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetCurrDataCounter
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_TEMP_Answer
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_SYSPARA_Answer
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_RDFILE_Answer
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_QUICKRT_Answer
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_QUICKHIST_Answer
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_MEM_Answer
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_JGJRT_Answer
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_JGJHIST_Answer
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_INFO_Answer
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_DIR_Answer
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CTRL_Answer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_BAT_Answer
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_AUTOSEND_Answer
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERROR_Answer
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SendAT
</UL>

<P><STRONG><a name="[133]"></a>BT_DMA_Init</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, hcbt20.o(i.BT_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BT_DMA_Init &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
</UL>

<P><STRONG><a name="[137]"></a>BT_GetLinkSta</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hcbt20.o(i.BT_GetLinkSta))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BT_GetLinkSta
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Lookup
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBluetooth
</UL>

<P><STRONG><a name="[139]"></a>BT_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, hcbt20.o(i.BT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = BT_Init &rArr; BT_SetBaud &rArr; BT_CheckBaud &rArr; BT_IsModelValid &rArr; BT_SendAT &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetName
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_UART_Init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetBaud
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Port_Init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsModelValid
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMA_Init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CmdList_Init
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CheckBaud
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSysPara
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12a]"></a>BT_IsModelValid</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, hcbt20.o(i.BT_IsModelValid))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = BT_IsModelValid &rArr; BT_SendAT &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Sleep_ms
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SendAT
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_RecvReset
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsRecvATOK
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetBaud
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CheckBaud
</UL>

<P><STRONG><a name="[142]"></a>BT_IsRecvATOK</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hcbt20.o(i.BT_IsRecvATOK))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BT_IsRecvATOK &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetName
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetBaud
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsModelValid
</UL>

<P><STRONG><a name="[148]"></a>BT_IsRecvData</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hcbt20.o(i.BT_IsRecvData))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetName
</UL>

<P><STRONG><a name="[143]"></a>BT_Lookup</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hcbt20.o(i.BT_Lookup))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = BT_Lookup &rArr; BT_CmdUnpack &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetLinkSta
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CmdUnpack
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CmdMatch
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
</UL>

<P><STRONG><a name="[13a]"></a>BT_Port_Init</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, hcbt20.o(i.BT_Port_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BT_Port_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
</UL>

<P><STRONG><a name="[146]"></a>BT_RealSendFile</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, hcbt20.o(i.BT_RealSendFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 4888 + Unknown Stack Size
<LI>Call Chain = BT_RealSendFile &rArr; HC_RDFILE_Answer &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_RDFILE_Answer
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSampFile
</UL>

<P><STRONG><a name="[140]"></a>BT_RecvReset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hcbt20.o(i.BT_RecvReset))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetName
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetDefault
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetBaud
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsModelValid
</UL>

<P><STRONG><a name="[141]"></a>BT_SendAT</STRONG> (Thumb, 226 bytes, Stack size 16 bytes, hcbt20.o(i.BT_SendAT))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = BT_SendAT &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetName
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetDefault
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetBaud
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsModelValid
</UL>

<P><STRONG><a name="[13c]"></a>BT_SetBaud</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, hcbt20.o(i.BT_SetBaud))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = BT_SetBaud &rArr; BT_CheckBaud &rArr; BT_IsModelValid &rArr; BT_SendAT &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_UART_Init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Sleep_ms
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SendAT
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_RecvReset
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsRecvATOK
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsModelValid
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CheckBaud
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
</UL>

<P><STRONG><a name="[147]"></a>BT_SetDefault</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, hcbt20.o(i.BT_SetDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = BT_SetDefault &rArr; BT_SendAT &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Sleep_ms
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SendAT
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_RecvReset
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOpt
</UL>

<P><STRONG><a name="[13d]"></a>BT_SetName</STRONG> (Thumb, 310 bytes, Stack size 40 bytes, hcbt20.o(i.BT_SetName))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = BT_SetName &rArr; BT_SendAT &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Sleep_ms
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SendAT
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_RecvReset
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsRecvData
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsRecvATOK
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSysPara
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
</UL>

<P><STRONG><a name="[129]"></a>BT_Sleep_ms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hcbt20.o(i.BT_Sleep_ms))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetName
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetDefault
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_RDFILE_Answer
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_DIR_Answer
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetBaud
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsModelValid
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CheckBaud
</UL>

<P><STRONG><a name="[128]"></a>BT_UART_Init</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, hcbt20.o(i.BT_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = BT_UART_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetBaud
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CheckBaud
</UL>

<P><STRONG><a name="[2fd]"></a>BankersRounding</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, ui_sampjgj.o(i.BankersRounding))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BankersRounding
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteJGJCurDot
</UL>

<P><STRONG><a name="[14e]"></a>Bat_Adc_Init</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, batadc.o(i.Bat_Adc_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = Bat_Adc_Init &rArr; Get_Bat_Quantity &rArr; Get_Bat_Voltage &rArr; ADC_Filter &rArr; Get_ADC_Value &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Quantity
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADCCLKConfig
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ResetCalibration
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetResetCalibrationStatus
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[157]"></a>Biaoding_Fun</STRONG> (Thumb, 1368 bytes, Stack size 120 bytes, ui_biaoding.o(i.Biaoding_Fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = Biaoding_Fun &rArr; ui_ButtonTask &rArr; Get_Touch_Res &rArr; Touch_Scan &rArr; TP_Scan &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_DataOrig
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZBiaoDing
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_Run
</UL>

<P><STRONG><a name="[15a]"></a>BkLedPWM_Init</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, bkled.o(i.BkLedPWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BkLedPWM_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[160]"></a>BkLed_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bkled.o(i.BkLed_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BkLed_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[161]"></a>BlockDataViewBro_Fun</STRONG> (Thumb, 786 bytes, Stack size 96 bytes, ui_browse10.o(i.BlockDataViewBro_Fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = BlockDataViewBro_Fun &rArr; ui_DispGJName &rArr; Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Fun
</UL>

<P><STRONG><a name="[164]"></a>BlockPreviewBro_Fun</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, ui_browse10.o(i.BlockPreviewBro_Fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = BlockPreviewBro_Fun &rArr; BlockDataViewBro_Fun &rArr; ui_DispGJName &rArr; Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myfree
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPicture
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRect
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockDataViewBro_Fun
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispClickRebarInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
</UL>

<P><STRONG><a name="[165]"></a>BlockPreviewBro_Init</STRONG> (Thumb, 942 bytes, Stack size 88 bytes, ui_browse10.o(i.BlockPreviewBro_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = BlockPreviewBro_Init &rArr; ui_DispGJName &rArr; Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNnNums
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouchSta
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBlockRebar
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Fun
</UL>

<P><STRONG><a name="[16c]"></a>BlockPreview_Fun</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, ui_sampblock.o(i.BlockPreview_Fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = BlockPreview_Fun &rArr; DataView_Fun &rArr; ui_DispGJName &rArr; Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myfree
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPicture
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRect
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispClickRebarInfo
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataView_Fun
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
</UL>

<P><STRONG><a name="[16d]"></a>BlockPreview_Init</STRONG> (Thumb, 944 bytes, Stack size 88 bytes, ui_sampblock.o(i.BlockPreview_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = BlockPreview_Init &rArr; ui_DispGJName &rArr; Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNnNums
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBlockRebar
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Fun
</UL>

<P><STRONG><a name="[16f]"></a>BlockSample_Init</STRONG> (Thumb, 1444 bytes, Stack size 240 bytes, ui_sampblock.o(i.BlockSample_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = BlockSample_Init &rArr; ui_DispGJName &rArr; Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouchSta
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_BrushMenuOneBtn
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsViewAbleFun
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlockDataCnt
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBlockDist
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCarTrackAll
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_InitDisp
</UL>

<P><STRONG><a name="[175]"></a>Bot_Abort</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, usb_bot.o(i.Bot_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Bot_Abort &rArr; SetEPRxStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxStatus
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Address_Management
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_ClearFeature
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Write10_Cmd
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Verify10_Cmd
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_TestUnitReady_Cmd
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadFormatCapacity_Cmd
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadCapacity10_Cmd
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Read10_Cmd
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Invalid_Cmd
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Format_Cmd
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_Out
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[16b]"></a>BrushBlockRebar</STRONG> (Thumb, 932 bytes, Stack size 112 bytes, ui_sampblock.o(i.BrushBlockRebar))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = BrushBlockRebar &rArr; LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Init
</UL>

<P><STRONG><a name="[17c]"></a>BrushBoXing</STRONG> (Thumb, 808 bytes, Stack size 120 bytes, opdata.o(i.BrushBoXing))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = BrushBoXing &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearCurvePage
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRebarBoXing
</UL>

<P><STRONG><a name="[181]"></a>BrushBoXingPage</STRONG> (Thumb, 1178 bytes, Stack size 128 bytes, opdata.o(i.BrushBoXingPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = BrushBoXingPage &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCurvePage
</UL>

<P><STRONG><a name="[182]"></a>BrushCar</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, opdata.o(i.BrushCar))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = BrushCar &rArr; LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReflashRedDot
</UL>

<P><STRONG><a name="[183]"></a>BrushCarNumDisp</STRONG> (Thumb, 1152 bytes, Stack size 32 bytes, ui_sampblock.o(i.BrushCarNumDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = BrushCarNumDisp &rArr; LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
</UL>

<P><STRONG><a name="[174]"></a>BrushCarTrackAll</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ui_sampblock.o(i.BrushCarTrackAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = BrushCarTrackAll &rArr; BrushCarTrackOne &rArr; LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCarTrackOne
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
</UL>

<P><STRONG><a name="[184]"></a>BrushCarTrackOne</STRONG> (Thumb, 786 bytes, Stack size 88 bytes, ui_sampblock.o(i.BrushCarTrackOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = BrushCarTrackOne &rArr; LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCarTrackAll
</UL>

<P><STRONG><a name="[185]"></a>BrushChannelSel</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, opdata.o(i.BrushChannelSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = BrushChannelSel &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText_Center
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiInit
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiFun
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_Run
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_InitDisp
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_Run
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_InitDisp
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_Run
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_InitDisp
</UL>

<P><STRONG><a name="[187]"></a>BrushCurvePage</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, opdata.o(i.BrushCurvePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = BrushCurvePage &rArr; BrushPouMianPage &rArr; LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearCurvePage
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMianPage
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXingPage
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_Run
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_InitDisp
</UL>

<P><STRONG><a name="[189]"></a>BrushHeatMap</STRONG> (Thumb, 1444 bytes, Stack size 9904 bytes, opdata.o(i.BrushHeatMap))
<BR><BR>[Stack]<UL><LI>Max Depth = 9960<LI>Call Chain = BrushHeatMap &rArr; ColorConverter2 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorConverter2
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_Run
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_InitDisp
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_InitDisp
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_Run
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_InitDisp
</UL>

<P><STRONG><a name="[18b]"></a>BrushJGJDot</STRONG> (Thumb, 970 bytes, Stack size 64 bytes, ui_sampjgj.o(i.BrushJGJDot))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = BrushJGJDot &rArr; LCD_ShowNums_Center &rArr; LCD_ShowNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText_Center
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums_Center
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
</UL>

<P><STRONG><a name="[18d]"></a>BrushJGJRebar</STRONG> (Thumb, 874 bytes, Stack size 64 bytes, ui_sampjgj.o(i.BrushJGJRebar))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = BrushJGJRebar &rArr; DispJGJData &rArr; LCD_ShowNums_Center &rArr; LCD_ShowNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums_Center
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJGJHegeFlagBefore
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispJGJData
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
</UL>

<P><STRONG><a name="[190]"></a>BrushJGJSketch</STRONG> (Thumb, 482 bytes, Stack size 56 bytes, ui_sampjgj.o(i.BrushJGJSketch))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = BrushJGJSketch &rArr; LCD_ShowNums_Center &rArr; LCD_ShowNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums_Center
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
</UL>

<P><STRONG><a name="[193]"></a>BrushMZJ</STRONG> (Thumb, 838 bytes, Stack size 40 bytes, opdata.o(i.BrushMZJ))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = BrushMZJ &rArr; LCD_FillRectMZJ &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRectMZJ
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiInit
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiFun
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
</UL>

<P><STRONG><a name="[195]"></a>BrushPageInit</STRONG> (Thumb, 486 bytes, Stack size 144 bytes, ui_paraset10.o(i.BrushPageInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = BrushPageInit &rArr; DoubleButtonDisp &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonDisp
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoubleButtonDisp
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialogParaDisp
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKLightDisp
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaSet_Init
</UL>

<P><STRONG><a name="[199]"></a>BrushPouMian</STRONG> (Thumb, 560 bytes, Stack size 104 bytes, opdata.o(i.BrushPouMian))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = BrushPouMian &rArr; LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearCurvePage
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRebarPouMian
</UL>

<P><STRONG><a name="[188]"></a>BrushPouMianPage</STRONG> (Thumb, 880 bytes, Stack size 104 bytes, opdata.o(i.BrushPouMianPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = BrushPouMianPage &rArr; LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCurvePage
</UL>

<P><STRONG><a name="[19a]"></a>BrushTiaoXing</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, opdata.o(i.BrushTiaoXing))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BrushTiaoXing &rArr; ColorConverter &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorConverter
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushTiaoXingPage
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRebarTiaoXing
</UL>

<P><STRONG><a name="[19c]"></a>BrushTiaoXingPage</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, opdata.o(i.BrushTiaoXingPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = BrushTiaoXingPage &rArr; BrushTiaoXing &rArr; ColorConverter &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushTiaoXing
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_Run
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_InitDisp
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_Run
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_InitDisp
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_Run
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_InitDisp
</UL>

<P><STRONG><a name="[19d]"></a>BrushZXX</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, opdata.o(i.BrushZXX))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = BrushZXX &rArr; LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiInit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
</UL>

<P><STRONG><a name="[1b]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2cb]"></a>ByteSwap</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_regs.o(i.ByteSwap))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>

<P><STRONG><a name="[19e]"></a>CBW_Decode</STRONG> (Thumb, 676 bytes, Stack size 8 bytes, usb_bot.o(i.CBW_Decode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4296<LI>Call Chain = CBW_Decode &rArr; SCSI_Write10_Cmd &rArr; Write_Memory &rArr; MAL_Write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Write10_Cmd
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Verify10_Cmd
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_TestUnitReady_Cmd
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Start_Stop_Unit_Cmd
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_RequestSense_Cmd
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadFormatCapacity_Cmd
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadCapacity10_Cmd
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Read10_Cmd
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ModeSense6_Cmd
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ModeSense10_Cmd
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Invalid_Cmd
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Inquiry_Cmd
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Format_Cmd
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_Out
</UL>

<P><STRONG><a name="[2d3]"></a>CT1711_CvrWait</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, ct1711.o(i.CT1711_CvrWait))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[1ae]"></a>CT1711_Get_Temp</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ct1711.o(i.CT1711_Get_Temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = CT1711_Get_Temp &rArr; CT1711_Temp_Degree &rArr; SWire_Read_Byte &rArr; SWire_Read_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Temp_Degree
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_GetTempera
</UL>

<P><STRONG><a name="[1b1]"></a>CT1711_Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ct1711.o(i.CT1711_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CT1711_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1af]"></a>CT1711_Start</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, ct1711.o(i.CT1711_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CT1711_Start &rArr; SWire_Rst
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWire_Rst
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Get_Temp
</UL>

<P><STRONG><a name="[1b0]"></a>CT1711_Temp_Degree</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, ct1711.o(i.CT1711_Temp_Degree))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CT1711_Temp_Degree &rArr; SWire_Read_Byte &rArr; SWire_Read_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWire_Read_Byte
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWire_Read_Bit
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Get_Temp
</UL>

<P><STRONG><a name="[2e6]"></a>CTR_HP</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, usb_int.o(i.CTR_HP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CTR_HP
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HP_CAN1_TX_IRQHandler
</UL>

<P><STRONG><a name="[1b8]"></a>CTR_LP</STRONG> (Thumb, 616 bytes, Stack size 8 bytes, usb_int.o(i.CTR_LP))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>

<P><STRONG><a name="[35a]"></a>CheckChargeSta</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, power.o(i.CheckChargeSta))
<BR><BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBattery
</UL>

<P><STRONG><a name="[1bc]"></a>CheckChargeStep</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, power.o(i.CheckChargeStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckChargeStep
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBattery
</UL>

<P><STRONG><a name="[361]"></a>ClearCarDist</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, opdata.o(i.ClearCarDist))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_InitDisp
</UL>

<P><STRONG><a name="[17d]"></a>ClearCurvePage</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, opdata.o(i.ClearCurvePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ClearCurvePage &rArr; LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMian
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCurvePage
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXing
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
</UL>

<P><STRONG><a name="[277]"></a>ClearDTOG_RX</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usb_regs.o(i.ClearDTOG_RX))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_SetConfiguration
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_NoData_Setup
</UL>

<P><STRONG><a name="[276]"></a>ClearDTOG_TX</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usb_regs.o(i.ClearDTOG_TX))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_SetConfiguration
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_NoData_Setup
</UL>

<P><STRONG><a name="[1bd]"></a>ClearJGJBuf</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ui_sampjgj.o(i.ClearJGJBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ClearJGJBuf &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
</UL>

<P><STRONG><a name="[1be]"></a>ClearTiaoxingPage</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, opdata.o(i.ClearTiaoxingPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ClearTiaoxingPage &rArr; LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_Run
</UL>

<P><STRONG><a name="[f9]"></a>ClearTouchSta</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, touch.o(i.ClearTouchSta))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = ClearTouchSta &rArr; ui_ButtonTask &rArr; Get_Touch_Res &rArr; Touch_Scan &rArr; TP_Scan &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetFun
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaSet_Init
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Start_InitDisp
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_InitDisp
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_InitDisp
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewInit
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
</UL>

<P><STRONG><a name="[27d]"></a>Clear_Status_Out</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb_regs.o(i.Clear_Status_Out))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
</UL>

<P><STRONG><a name="[19b]"></a>ColorConverter</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, opdata.o(i.ColorConverter))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ColorConverter &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushTiaoXing
</UL>

<P><STRONG><a name="[18a]"></a>ColorConverter2</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, opdata.o(i.ColorConverter2))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ColorConverter2 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushHeatMap
</UL>

<P><STRONG><a name="[1bf]"></a>ConfigFiZero</STRONG> (Thumb, 342 bytes, Stack size 40 bytes, ui_paraset10.o(i.ConfigFiZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = ConfigFiZero &rArr; fNumInputDialog &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReactionXY
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero_Init
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOpt
</UL>

<P><STRONG><a name="[1c0]"></a>ConfigFiZero_Init</STRONG> (Thumb, 1526 bytes, Stack size 368 bytes, ui_paraset10.o(i.ConfigFiZero_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = ConfigFiZero_Init &rArr; LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero
</UL>

<P><STRONG><a name="[114]"></a>CountDifBuffer</STRONG> (Thumb, 718 bytes, Stack size 36 bytes, aimlib.o(i.CountDifBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CountDifBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarDif
</UL>

<P><STRONG><a name="[117]"></a>CountMZKBuffer</STRONG> (Thumb, 220 bytes, Stack size 96 bytes, aimlib.o(i.CountMZKBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = CountMZKBuffer &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarMZK
</UL>

<P><STRONG><a name="[115]"></a>CountSecDifBuffer</STRONG> (Thumb, 718 bytes, Stack size 36 bytes, aimlib.o(i.CountSecDifBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CountSecDifBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarDif
</UL>

<P><STRONG><a name="[119]"></a>CountSubBuffer</STRONG> (Thumb, 440 bytes, Stack size 28 bytes, aimlib.o(i.CountSubBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CountSubBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarSub
</UL>

<P><STRONG><a name="[11b]"></a>CountSumBuffer</STRONG> (Thumb, 666 bytes, Stack size 48 bytes, aimlib.o(i.CountSumBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = CountSumBuffer &rArr; FindCoverTab_Sum &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarParaCH3
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarParaCH2
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarParaCH1
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindCoverTab_Sum
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarSum
</UL>

<P><STRONG><a name="[1c6]"></a>CreateSelLink</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ui_browse10.o(i.CreateSelLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CreateSelLink &rArr; mymalloc &rArr; my_mem_malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_InitDisp
</UL>

<P><STRONG><a name="[2e]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gps.o(i.DMA1_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hcbt20.o(i.DMA1_Channel5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, uart.o(i.DMA1_Channel6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DMA1_Channel6_IRQHandler &rArr; USART2_RX_DMA_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetCurrDataCounter
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_RX_DMA_Init
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[1cb]"></a>DMA_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_RX_DMA_Init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel6_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel5_IRQHandler
</UL>

<P><STRONG><a name="[1c9]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[131]"></a>DMA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_RX_DMA_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_UART_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMA_Init
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
</UL>

<P><STRONG><a name="[135]"></a>DMA_DeInit</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_RX_DMA_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_UART_Init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMA_Init
</UL>

<P><STRONG><a name="[1cc]"></a>DMA_GetCurrDataCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_GetCurrDataCounter))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel6_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[1ca]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel6_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel5_IRQHandler
</UL>

<P><STRONG><a name="[1c8]"></a>DMA_GetITStatus</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[2e3]"></a>DMA_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_RX_DMA_Init
</UL>

<P><STRONG><a name="[136]"></a>DMA_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_RX_DMA_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_UART_Init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMA_Init
</UL>

<P><STRONG><a name="[132]"></a>DMA_SetCurrDataCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_SetCurrDataCounter))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_RX_DMA_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
</UL>

<P><STRONG><a name="[16e]"></a>DataView_Fun</STRONG> (Thumb, 816 bytes, Stack size 96 bytes, ui_sampblock.o(i.DataView_Fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = DataView_Fun &rArr; ui_DispGJName &rArr; Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Fun
</UL>

<P><STRONG><a name="[1e]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[363]"></a>DeleteBlockDataOne</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, ui_sampblock.o(i.DeleteBlockDataOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DeleteBlockDataOne
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
</UL>

<P><STRONG><a name="[1d6]"></a>DeleteBoXing</STRONG> (Thumb, 1390 bytes, Stack size 104 bytes, opdata.o(i.DeleteBoXing))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = DeleteBoXing &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCurveOne
</UL>

<P><STRONG><a name="[1d8]"></a>DeleteChannelLine</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, opdata.o(i.DeleteChannelLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = DeleteChannelLine &rArr; LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_Run
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_Run
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_Run
</UL>

<P><STRONG><a name="[1d9]"></a>DeleteCurveOne</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, opdata.o(i.DeleteCurveOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = DeleteCurveOne &rArr; DeletePouMian &rArr; LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChannelLine
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteTiaoXing
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePouMian
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBoXing
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
</UL>

<P><STRONG><a name="[1dc]"></a>DeletePouMian</STRONG> (Thumb, 934 bytes, Stack size 80 bytes, opdata.o(i.DeletePouMian))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = DeletePouMian &rArr; LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCurveOne
</UL>

<P><STRONG><a name="[1dd]"></a>DeleteSelFile</STRONG> (Thumb, 58 bytes, Stack size 56 bytes, ui_browse10.o(i.DeleteSelFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 4864 + Unknown Stack Size
<LI>Call Chain = DeleteSelFile &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myfree
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
</UL>

<P><STRONG><a name="[1df]"></a>DeleteSelLink</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ui_browse10.o(i.DeleteSelLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DeleteSelLink &rArr; myfree &rArr; my_mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myfree
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
</UL>

<P><STRONG><a name="[1da]"></a>DeleteTiaoXing</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, opdata.o(i.DeleteTiaoXing))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DeleteTiaoXing &rArr; LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCurveOne
</UL>

<P><STRONG><a name="[197]"></a>DialogParaDisp</STRONG> (Thumb, 440 bytes, Stack size 56 bytes, ui_paraset10.o(i.DialogParaDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = DialogParaDisp &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPageInit
</UL>

<P><STRONG><a name="[116]"></a>DifAimFunc</STRONG> (Thumb, 408 bytes, Stack size 48 bytes, aimlib.o(i.DifAimFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = DifAimFunc &rArr; FindCoverTab_Sum &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindCoverTab_Sum
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarDif
</UL>

<P><STRONG><a name="[173]"></a>DispBlockDist</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, ui_sampblock.o(i.DispBlockDist))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = DispBlockDist &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
</UL>

<P><STRONG><a name="[1e0]"></a>DispCarDist</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, opdata.o(i.DispCarDist))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = DispCarDist &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadPoint
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
</UL>

<P><STRONG><a name="[1e2]"></a>DispCarTrackCur</STRONG> (Thumb, 1072 bytes, Stack size 104 bytes, ui_sampblock.o(i.DispCarTrackCur))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = DispCarTrackCur &rArr; LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
</UL>

<P><STRONG><a name="[1db]"></a>DispChannelLine</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, opdata.o(i.DispChannelLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = DispChannelLine &rArr; LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCurveOne
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_Run
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_InitDisp
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_Run
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_InitDisp
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_Run
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_InitDisp
</UL>

<P><STRONG><a name="[169]"></a>DispClickRebarInfo</STRONG> (Thumb, 658 bytes, Stack size 128 bytes, ui_sampblock.o(i.DispClickRebarInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = DispClickRebarInfo &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Fun
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Fun
</UL>

<P><STRONG><a name="[1e3]"></a>DispFileHighLight</STRONG> (Thumb, 1386 bytes, Stack size 152 bytes, ui_browse10.o(i.DispFileHighLight))
<BR><BR>[Stack]<UL><LI>Max Depth = 4960 + Unknown Stack Size
<LI>Call Chain = DispFileHighLight &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Text
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNameShort
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
</UL>

<P><STRONG><a name="[1e9]"></a>DispFileList</STRONG> (Thumb, 744 bytes, Stack size 152 bytes, ui_browse10.o(i.DispFileList))
<BR><BR>[Stack]<UL><LI>Max Depth = 4960 + Unknown Stack Size
<LI>Call Chain = DispFileList &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Text
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNameShort
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_InitDisp
</UL>

<P><STRONG><a name="[18e]"></a>DispJGJData</STRONG> (Thumb, 550 bytes, Stack size 64 bytes, ui_sampjgj.o(i.DispJGJData))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = DispJGJData &rArr; LCD_ShowNums_Center &rArr; LCD_ShowNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText_Center
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums_Center
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJRebar
</UL>

<P><STRONG><a name="[10b]"></a>DispRebarBoXing</STRONG> (Thumb, 414 bytes, Stack size 40 bytes, aimlib.o(i.DispRebarBoXing))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = DispRebarBoXing &rArr; BrushBoXing &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXing
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_MZK
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_HD
</UL>

<P><STRONG><a name="[10d]"></a>DispRebarCnt</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, aimlib.o(i.DispRebarCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = DispRebarCnt &rArr; DispSaveDataCnt &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSaveDataCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_MZK
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_HD
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
</UL>

<P><STRONG><a name="[10c]"></a>DispRebarPouMian</STRONG> (Thumb, 414 bytes, Stack size 40 bytes, aimlib.o(i.DispRebarPouMian))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = DispRebarPouMian &rArr; BrushPouMian &rArr; LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMian
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_MZK
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_HD
</UL>

<P><STRONG><a name="[10a]"></a>DispRebarTiaoXing</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, aimlib.o(i.DispRebarTiaoXing))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DispRebarTiaoXing &rArr; BrushTiaoXing &rArr; ColorConverter &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushTiaoXing
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_HD
</UL>

<P><STRONG><a name="[1ea]"></a>DispSaveDataCnt</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, opdata.o(i.DispSaveDataCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = DispSaveDataCnt &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadPoint
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRebarCnt
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_InitDisp
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_InitDisp
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_InitDisp
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
</UL>

<P><STRONG><a name="[1eb]"></a>DispScrollBar</STRONG> (Thumb, 202 bytes, Stack size 56 bytes, ui_sampset.o(i.DispScrollBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DispScrollBar &rArr; LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Fun
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_InitDisp
</UL>

<P><STRONG><a name="[198]"></a>DoubleButtonDisp</STRONG> (Thumb, 274 bytes, Stack size 40 bytes, ui_paraset10.o(i.DoubleButtonDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = DoubleButtonDisp &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText_Center
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPageInit
</UL>

<P><STRONG><a name="[7]"></a>EP1_IN_Callback</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usb_endp.o(i.EP1_IN_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EP1_IN_Callback &rArr; Mass_Storage_In &rArr; SCSI_Read10_Cmd &rArr; Read_Memory &rArr; MAL_Read &rArr; W25QXX_Read &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_In
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_istr.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>EP2_OUT_Callback</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usb_endp.o(i.EP2_OUT_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4312<LI>Call Chain = EP2_OUT_Callback &rArr; Mass_Storage_Out &rArr; CBW_Decode &rArr; SCSI_Write10_Cmd &rArr; Write_Memory &rArr; MAL_Write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_Out
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_istr.o(.data)
</UL>
<P><STRONG><a name="[72]"></a>ERROR_Answer</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, hcbt20.o(i.ERROR_Answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = ERROR_Answer &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hcbt20.o(i.BT_CmdList_Init)
</UL>
<P><STRONG><a name="[28]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, ft6336u.o(i.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EXTI1_IRQHandler &rArr; TP_RD_Reg &rArr; IIC_Read_Byte &rArr; IIC_NAck &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_RD_Reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[1f0]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
</UL>

<P><STRONG><a name="[1ee]"></a>EXTI_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
</UL>

<P><STRONG><a name="[2dc]"></a>EXTI_Init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_INT_EXTI_Init
</UL>

<P><STRONG><a name="[2ba]"></a>FLASH_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
</UL>

<P><STRONG><a name="[1f1]"></a>FLASH_ErasePage</STRONG> (Thumb, 142 bytes, Stack size 12 bytes, stm32f10x_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastBank2Operation
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastBank2Operation
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastBank1Operation
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
</UL>

<P><STRONG><a name="[1f6]"></a>FLASH_GetBank1Status</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_GetBank1Status))
<BR><BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastBank1Operation
</UL>

<P><STRONG><a name="[1f7]"></a>FLASH_GetBank2Status</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_GetBank2Status))
<BR><BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastBank2Operation
</UL>

<P><STRONG><a name="[2bc]"></a>FLASH_Lock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
</UL>

<P><STRONG><a name="[1f4]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, stm32f10x_flash.o(i.FLASH_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastBank2Operation
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastBank1Operation
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
</UL>

<P><STRONG><a name="[2b9]"></a>FLASH_Unlock</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
</UL>

<P><STRONG><a name="[1f2]"></a>FLASH_WaitForLastBank1Operation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f10x_flash.o(i.FLASH_WaitForLastBank1Operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_WaitForLastBank1Operation
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank1Status
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[1f3]"></a>FLASH_WaitForLastBank2Operation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f10x_flash.o(i.FLASH_WaitForLastBank2Operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_WaitForLastBank2Operation
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank2Status
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[1f5]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f10x_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank1Status
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
</UL>

<P><STRONG><a name="[262]"></a>FSMC_NORSRAMCmd</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(i.FSMC_NORSRAMCmd))
<BR><BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[261]"></a>FSMC_NORSRAMInit</STRONG> (Thumb, 230 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(i.FSMC_NORSRAMInit))
<BR><BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[1f8]"></a>FT6336_Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ft6336u.o(i.FT6336_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FT6336_Init &rArr; TP_INT_EXTI_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_delay_ms
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_RST_Init
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_INT_EXTI_Init
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1fd]"></a>FXXZBiaoDing</STRONG> (Thumb, 682 bytes, Stack size 96 bytes, ui_condition.o(i.FXXZBiaoDing))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = FXXZBiaoDing &rArr; ui_Biaoding_InitDisp &rArr; ui_DispTitleBar &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Biaoding_Fun
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_InitDisp
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiFun
</UL>

<P><STRONG><a name="[1fe]"></a>FXXZQuZhiFun</STRONG> (Thumb, 352 bytes, Stack size 32 bytes, ui_condition.o(i.FXXZQuZhiFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = FXXZQuZhiFun &rArr; FXXZBiaoDing &rArr; ui_Biaoding_InitDisp &rArr; ui_DispTitleBar &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Data
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushMZJ
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushChannelSel
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums_Center
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiInit
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZBiaoDing
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
</UL>

<P><STRONG><a name="[1ff]"></a>FXXZQuZhiInit</STRONG> (Thumb, 424 bytes, Stack size 104 bytes, ui_condition.o(i.FXXZQuZhiInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = FXXZQuZhiInit &rArr; BrushChannelSel &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushZXX
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushMZJ
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushChannelSel
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiFun
</UL>

<P><STRONG><a name="[201]"></a>FanXiangXZSetFun</STRONG> (Thumb, 1624 bytes, Stack size 128 bytes, ui_condition.o(i.FanXiangXZSetFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = FanXiangXZSetFun &rArr; FXXZQuZhiFun &rArr; FXXZBiaoDing &rArr; ui_Biaoding_InitDisp &rArr; ui_DispTitleBar &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText_Center
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums_Center
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetInit
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiFun
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_DesignArea_Touch
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouchSta
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_Run
</UL>

<P><STRONG><a name="[202]"></a>FanXiangXZSetInit</STRONG> (Thumb, 1318 bytes, Stack size 184 bytes, ui_condition.o(i.FanXiangXZSetInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = FanXiangXZSetInit &rArr; ui_DispTitleBar &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText_Center
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums_Center
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
</UL>

<P><STRONG><a name="[fe]"></a>FilterHandler_Sub_Dif</STRONG> (Thumb, 516 bytes, Stack size 104 bytes, aimlib.o(i.FilterHandler_Sub_Dif))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = FilterHandler_Sub_Dif &rArr; SourceBufGetData
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SourceBufGetData
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcFilter
</UL>

<P><STRONG><a name="[ff]"></a>FilterHandler_Sum</STRONG> (Thumb, 208 bytes, Stack size 96 bytes, aimlib.o(i.FilterHandler_Sum))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = FilterHandler_Sum &rArr; SourceBufGetData
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SourceBufGetData
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcFilter
</UL>

<P><STRONG><a name="[204]"></a>FindCoverTab_Sub</STRONG> (Thumb, 872 bytes, Stack size 128 bytes, aimlib.o(i.FindCoverTab_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = FindCoverTab_Sub &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubAimFunc
</UL>

<P><STRONG><a name="[1c5]"></a>FindCoverTab_Sum</STRONG> (Thumb, 872 bytes, Stack size 136 bytes, aimlib.o(i.FindCoverTab_Sum))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = FindCoverTab_Sum &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MZKAimFunc
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DifAimFunc
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountSumBuffer
</UL>

<P><STRONG><a name="[2db]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f10x_gpio.o(i.GPIO_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_INT_EXTI_Init
</UL>

<P><STRONG><a name="[145]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_Init
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Init
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Beep_Init
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Init
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BkLed_Init
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BkLedPWM_Init
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_Adc_Init
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_SDA_OUT
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_SDA_IN
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_RST_Init
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_INT_EXTI_Init
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_UART_Init
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Port_Init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_UART_Init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Port_Init
</UL>

<P><STRONG><a name="[271]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, stm32f10x_gpio.o(i.GPIO_PinRemapConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Beep_Init
</UL>

<P><STRONG><a name="[138]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetLinkSta
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Wait_Ack
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Read_Byte
</UL>

<P><STRONG><a name="[13e]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetName
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT6336_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetDefault
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOptRes
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Wait_Ack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Stop
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Start
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Send_Byte
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Read_Byte
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_NAck
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Config
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_RST_Init
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Start
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetBaud
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Port_Init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsModelValid
</UL>

<P><STRONG><a name="[13f]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetName
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT6336_Init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetDefault
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOptRes
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Wait_Ack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Stop
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Start
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Send_Byte
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Read_Byte
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_NAck
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Config
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Stop
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Port_Init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetBaud
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Port_Init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsModelValid
</UL>

<P><STRONG><a name="[20b]"></a>GPS_CountDown</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gps.o(i.GPS_CountDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPS_CountDown &rArr; GPS_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Stop
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[20e]"></a>GPS_DataParsing</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, gps.o(i.GPS_DataParsing))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPS_DataParsing &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Location_Data
</UL>

<P><STRONG><a name="[20f]"></a>GPS_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gps.o(i.GPS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = GPS_Init &rArr; GPS_UART_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_UART_Init
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Start
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Port_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fb]"></a>GPS_Location_Data</STRONG> (Thumb, 670 bytes, Stack size 56 bytes, gps.o(i.GPS_Location_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = GPS_Location_Data &rArr; wgs2bd &rArr; wgs2gcj &rArr; transformLat &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNnNums
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs2bd
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Stop
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_DataParsing
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
</UL>

<P><STRONG><a name="[fa]"></a>GPS_ManualStart</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gps.o(i.GPS_ManualStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPS_ManualStart &rArr; GPS_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
</UL>

<P><STRONG><a name="[210]"></a>GPS_Port_Init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, gps.o(i.GPS_Port_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPS_Port_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Init
</UL>

<P><STRONG><a name="[20d]"></a>GPS_Start</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gps.o(i.GPS_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPS_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_ManualStart
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_CountDown
</UL>

<P><STRONG><a name="[20c]"></a>GPS_Stop</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gps.o(i.GPS_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPS_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Location_Data
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_CountDown
</UL>

<P><STRONG><a name="[211]"></a>GPS_UART_Init</STRONG> (Thumb, 252 bytes, Stack size 72 bytes, gps.o(i.GPS_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = GPS_UART_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Init
</UL>

<P><STRONG><a name="[171]"></a>GetBlockDataCnt</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ui_sampblock.o(i.GetBlockDataCnt))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
</UL>

<P><STRONG><a name="[362]"></a>GetBlockDataDirInfo</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, ui_sampblock.o(i.GetBlockDataDirInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetBlockDataDirInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
</UL>

<P><STRONG><a name="[1d3]"></a>GetEPRxAddr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_regs.o(i.GetEPRxAddr))
<BR><BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Read
</UL>

<P><STRONG><a name="[2ea]"></a>GetEPRxCount</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usb_regs.o(i.GetEPRxCount))
<BR><BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Read
</UL>

<P><STRONG><a name="[1cf]"></a>GetEPTxAddr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_regs.o(i.GetEPTxAddr))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Write
</UL>

<P><STRONG><a name="[2b1]"></a>GetHouDuAvg</STRONG> (Thumb, 168 bytes, Stack size 12 bytes, ui_sample10.o(i.GetHouDuAvg))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetHouDuAvg
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSampFile
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlockFile
</UL>

<P><STRONG><a name="[213]"></a>GetJGJHegeFlagAfter</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ui_sampjgj.o(i.GetJGJHegeFlagAfter))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GetJGJHegeFlagAfter &rArr; IsRebarHege &rArr; __aeabi_f2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsRebarHege
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetJGJHegeCnt
</UL>

<P><STRONG><a name="[18f]"></a>GetJGJHegeFlagBefore</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ui_sampjgj.o(i.GetJGJHegeFlagBefore))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GetJGJHegeFlagBefore &rArr; IsRebarHege &rArr; __aeabi_f2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsRebarTested
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsRebarHege
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJRebar
</UL>

<P><STRONG><a name="[2b4]"></a>GetJGJHouDuAvg</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, ui_sampjgj.o(i.GetJGJHouDuAvg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetJGJHouDuAvg
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveJGJFile
</UL>

<P><STRONG><a name="[2b5]"></a>GetJGJSaveCnt</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, ui_sampjgj.o(i.GetJGJSaveCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetJGJSaveCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveJGJFile
</UL>

<P><STRONG><a name="[1e7]"></a>GetNameShort</STRONG> (Thumb, 258 bytes, Stack size 96 bytes, ui_public.o(i.GetNameShort))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = GetNameShort &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileList
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileHighLight
</UL>

<P><STRONG><a name="[217]"></a>GetOneChRebarResult</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, aimlib.o(i.GetOneChRebarResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GetOneChRebarResult &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarResult
</UL>

<P><STRONG><a name="[218]"></a>GetRebarCnt_Dif</STRONG> (Thumb, 1128 bytes, Stack size 88 bytes, aimlib.o(i.GetRebarCnt_Dif))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = GetRebarCnt_Dif &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubAimFunc
</UL>

<P><STRONG><a name="[219]"></a>GetRebarCnt_Sub</STRONG> (Thumb, 1446 bytes, Stack size 88 bytes, aimlib.o(i.GetRebarCnt_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = GetRebarCnt_Sub &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubAimFunc
</UL>

<P><STRONG><a name="[108]"></a>GetRebarResult</STRONG> (Thumb, 300 bytes, Stack size 184 bytes, aimlib.o(i.GetRebarResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = GetRebarResult &rArr; GetOneChRebarResult &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneChRebarResult
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_MZK
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_HD
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_Block
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_JGJ
</UL>

<P><STRONG><a name="[367]"></a>GetSampDataCnt</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ui_sample10.o(i.GetSampDataCnt))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
</UL>

<P><STRONG><a name="[21a]"></a>GetSignalData</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, opdata.o(i.GetSignalData))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GetSignalData &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
</UL>

<P><STRONG><a name="[ec]"></a>Get_ADC_Value</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, batadc.o(i.Get_ADC_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Get_ADC_Value &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCmd
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Filter
</UL>

<P><STRONG><a name="[200]"></a>Get_Adc_Data</STRONG> (Thumb, 530 bytes, Stack size 24 bytes, opdata.o(i.Get_Adc_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = Get_Adc_Data &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CarJourney
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiFun
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
</UL>

<P><STRONG><a name="[159]"></a>Get_Adc_DataOrig</STRONG> (Thumb, 342 bytes, Stack size 0 bytes, opdata.o(i.Get_Adc_DataOrig))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Biaoding_Fun
</UL>

<P><STRONG><a name="[221]"></a>Get_BatPrcnt</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ui_public.o(i.Get_BatPrcnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = Get_BatPrcnt &rArr; Get_Bat_Quantity &rArr; Get_Bat_Voltage &rArr; ADC_Filter &rArr; Get_ADC_Value &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Quantity
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
</UL>

<P><STRONG><a name="[222]"></a>Get_Bat_Percent</STRONG> (Thumb, 194 bytes, Stack size 48 bytes, batadc.o(i.Get_Bat_Percent))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Get_Bat_Percent &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Quantity
</UL>

<P><STRONG><a name="[156]"></a>Get_Bat_Quantity</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, batadc.o(i.Get_Bat_Quantity))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = Get_Bat_Quantity &rArr; Get_Bat_Voltage &rArr; ADC_Filter &rArr; Get_ADC_Value &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Voltage
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Percent
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_Adc_Init
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBattery
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_BatPrcnt
</UL>

<P><STRONG><a name="[224]"></a>Get_Bat_Voltage</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, batadc.o(i.Get_Bat_Voltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = Get_Bat_Voltage &rArr; ADC_Filter &rArr; Get_ADC_Value &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Filter
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Quantity
</UL>

<P><STRONG><a name="[220]"></a>Get_CarJourney</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, opdata.o(i.Get_CarJourney))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Get_CarJourney &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Data
</UL>

<P><STRONG><a name="[356]"></a>Get_DragChannel</STRONG> (Thumb, 166 bytes, Stack size 20 bytes, touch.o(i.Get_DragChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Get_DragChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_Run
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_Run
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_Run
</UL>

<P><STRONG><a name="[f1]"></a>Get_FatFreePrcnt</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, ui_public.o(i.Get_FatFreePrcnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 4520<LI>Call Chain = Get_FatFreePrcnt &rArr; exf_getfree &rArr; f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exf_getfree
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_InitDisp
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_InitDisp
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
</UL>

<P><STRONG><a name="[226]"></a>Get_HzMat</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, pytext.o(i.Get_HzMat))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Get_HzMat &rArr; W25QXX_Read &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Text
</UL>

<P><STRONG><a name="[76]"></a>Get_Max_Lun</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb_prop.o(i.Get_Max_Lun))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(i.MASS_Data_Setup)
</UL>
<P><STRONG><a name="[228]"></a>Get_SerialNum</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, hw_config.o(i.Get_SerialNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Get_SerialNum &rArr; IntToUnicode
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_init
</UL>

<P><STRONG><a name="[22a]"></a>Get_Touch_Res</STRONG> (Thumb, 1116 bytes, Stack size 24 bytes, touch.o(i.Get_Touch_Res))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = Get_Touch_Res &rArr; Touch_Scan &rArr; TP_Scan &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Beep_On
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Scan
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
</UL>

<P><STRONG><a name="[6b]"></a>HC_AUTOSEND_Answer</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, hcbt20.o(i.HC_AUTOSEND_Answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = HC_AUTOSEND_Answer &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hcbt20.o(i.BT_CmdList_Init)
</UL>
<P><STRONG><a name="[66]"></a>HC_BAT_Answer</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hcbt20.o(i.HC_BAT_Answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = HC_BAT_Answer &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hcbt20.o(i.BT_CmdList_Init)
</UL>
<P><STRONG><a name="[6c]"></a>HC_CTRL_Answer</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, hcbt20.o(i.HC_CTRL_Answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = HC_CTRL_Answer &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hcbt20.o(i.BT_CmdList_Init)
</UL>
<P><STRONG><a name="[69]"></a>HC_DIR_Answer</STRONG> (Thumb, 418 bytes, Stack size 376 bytes, hcbt20.o(i.HC_DIR_Answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 5112 + Unknown Stack Size
<LI>Call Chain = HC_DIR_Answer &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Sleep_ms
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hcbt20.o(i.BT_CmdList_Init)
</UL>
<P><STRONG><a name="[65]"></a>HC_INFO_Answer</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, hcbt20.o(i.HC_INFO_Answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = HC_INFO_Answer &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hcbt20.o(i.BT_CmdList_Init)
</UL>
<P><STRONG><a name="[71]"></a>HC_JGJHIST_Answer</STRONG> (Thumb, 366 bytes, Stack size 72 bytes, hcbt20.o(i.HC_JGJHIST_Answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = HC_JGJHIST_Answer &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hcbt20.o(i.BT_CmdList_Init)
</UL>
<P><STRONG><a name="[70]"></a>HC_JGJRT_Answer</STRONG> (Thumb, 506 bytes, Stack size 32 bytes, hcbt20.o(i.HC_JGJRT_Answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = HC_JGJRT_Answer &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hcbt20.o(i.BT_CmdList_Init)
</UL>
<P><STRONG><a name="[67]"></a>HC_MEM_Answer</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, hcbt20.o(i.HC_MEM_Answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = HC_MEM_Answer &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hcbt20.o(i.BT_CmdList_Init)
</UL>
<P><STRONG><a name="[6f]"></a>HC_QUICKHIST_Answer</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, hcbt20.o(i.HC_QUICKHIST_Answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = HC_QUICKHIST_Answer &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hcbt20.o(i.BT_CmdList_Init)
</UL>
<P><STRONG><a name="[6e]"></a>HC_QUICKRT_Answer</STRONG> (Thumb, 364 bytes, Stack size 32 bytes, hcbt20.o(i.HC_QUICKRT_Answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = HC_QUICKRT_Answer &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hcbt20.o(i.BT_CmdList_Init)
</UL>
<P><STRONG><a name="[6a]"></a>HC_RDFILE_Answer</STRONG> (Thumb, 262 bytes, Stack size 72 bytes, hcbt20.o(i.HC_RDFILE_Answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 4880 + Unknown Stack Size
<LI>Call Chain = HC_RDFILE_Answer &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Sleep_ms
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_RealSendFile
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hcbt20.o(i.BT_CmdList_Init)
</UL>
<P><STRONG><a name="[6d]"></a>HC_SYSPARA_Answer</STRONG> (Thumb, 202 bytes, Stack size 56 bytes, hcbt20.o(i.HC_SYSPARA_Answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = HC_SYSPARA_Answer &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hcbt20.o(i.BT_CmdList_Init)
</UL>
<P><STRONG><a name="[68]"></a>HC_TEMP_Answer</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, hcbt20.o(i.HC_TEMP_Answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = HC_TEMP_Answer &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hcbt20.o(i.BT_CmdList_Init)
</UL>
<P><STRONG><a name="[19]"></a>HardFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwrOffFunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[231]"></a>HighParaSet_Fun</STRONG> (Thumb, 588 bytes, Stack size 40 bytes, ui_sampset.o(i.HighParaSet_Fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = HighParaSet_Fun &rArr; HighParaSet_Init &rArr; SampParaOptions &rArr; ui_DispGJName &rArr; Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaOptions
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Init
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispScrollBar
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReaction
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaTableDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
</UL>

<P><STRONG><a name="[232]"></a>HighParaSet_Init</STRONG> (Thumb, 76 bytes, Stack size 120 bytes, ui_sampset.o(i.HighParaSet_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = HighParaSet_Init &rArr; SampParaOptions &rArr; ui_DispGJName &rArr; Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaOptions
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Fun
</UL>

<P><STRONG><a name="[239]"></a>IIC_Ack</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ft6336u.o(i.IIC_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = IIC_Ack &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_delay_us
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[1fa]"></a>IIC_Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ft6336u.o(i.IIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IIC_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT6336_Init
</UL>

<P><STRONG><a name="[23c]"></a>IIC_NAck</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ft6336u.o(i.IIC_NAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = IIC_NAck &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_delay_us
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[23d]"></a>IIC_Read_Byte</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ft6336u.o(i.IIC_Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = IIC_Read_Byte &rArr; IIC_NAck &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_delay_us
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_RD_Reg
</UL>

<P><STRONG><a name="[23f]"></a>IIC_Send_Byte</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ft6336u.o(i.IIC_Send_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = IIC_Send_Byte &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_delay_us
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_RD_Reg
</UL>

<P><STRONG><a name="[240]"></a>IIC_Start</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ft6336u.o(i.IIC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = IIC_Start &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_delay_us
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_RD_Reg
</UL>

<P><STRONG><a name="[241]"></a>IIC_Stop</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ft6336u.o(i.IIC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = IIC_Stop &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_delay_us
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_RD_Reg
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
</UL>

<P><STRONG><a name="[242]"></a>IIC_Wait_Ack</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, ft6336u.o(i.IIC_Wait_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = IIC_Wait_Ack &rArr; IIC_Stop &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_delay_us
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_RD_Reg
</UL>

<P><STRONG><a name="[249]"></a>IWDG_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[243]"></a>IWDG_Feed</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, iwdog.o(i.IWDG_Feed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IWDG_Feed
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[245]"></a>IWDG_Init</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, iwdog.o(i.IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[244]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Feed
</UL>

<P><STRONG><a name="[247]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_SetPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[248]"></a>IWDG_SetReload</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_SetReload))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[246]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_WriteAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[1b9]"></a>In0_Process</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, usb_core.o(i.In0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = In0_Process &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDeviceAddress
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[24c]"></a>InitAimPara</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, aimlib.o(i.InitAimPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = InitAimPara &rArr; InitAimRebarParaCH3 &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarResult
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarParaCH3
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarParaCH2
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimRebarParaCH1
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
</UL>

<P><STRONG><a name="[11c]"></a>InitAimRebarParaCH1</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, aimlib.o(i.InitAimRebarParaCH1))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = InitAimRebarParaCH1 &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimPara
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountSumBuffer
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyzeCoverData_Sub
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyzeCoverData_MZK
</UL>

<P><STRONG><a name="[11d]"></a>InitAimRebarParaCH2</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, aimlib.o(i.InitAimRebarParaCH2))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = InitAimRebarParaCH2 &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimPara
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountSumBuffer
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyzeCoverData_Sub
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyzeCoverData_MZK
</UL>

<P><STRONG><a name="[11e]"></a>InitAimRebarParaCH3</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, aimlib.o(i.InitAimRebarParaCH3))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = InitAimRebarParaCH3 &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimPara
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountSumBuffer
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyzeCoverData_Sub
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyzeCoverData_MZK
</UL>

<P><STRONG><a name="[24d]"></a>InitAimRebarResult</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, aimlib.o(i.InitAimRebarResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InitAimRebarResult
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimPara
</UL>

<P><STRONG><a name="[24f]"></a>InitSysPara</STRONG> (Thumb, 394 bytes, Stack size 8 bytes, oppara.o(i.InitSysPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = InitSysPara &rArr; BT_Init &rArr; BT_SetBaud &rArr; BT_CheckBaud &rArr; BT_IsModelValid &rArr; BT_SendAT &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_ReadTime
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaTableDefaultAll
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Ctrl
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetName
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysPara
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
</UL>

<P><STRONG><a name="[214]"></a>IsRebarHege</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, ui_sampjgj.o(i.IsRebarHege))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = IsRebarHege &rArr; __aeabi_f2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJGJHegeFlagBefore
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJGJHegeFlagAfter
</UL>

<P><STRONG><a name="[215]"></a>IsRebarTested</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ui_sampjgj.o(i.IsRebarTested))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IsRebarTested
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJGJHegeFlagBefore
</UL>

<P><STRONG><a name="[170]"></a>IsViewAbleFun</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, ui_sampblock.o(i.IsViewAbleFun))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
</UL>

<P><STRONG><a name="[366]"></a>Is_DesignArea_Slide</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, touch.o(i.Is_DesignArea_Slide))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Is_DesignArea_Slide
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
</UL>

<P><STRONG><a name="[125]"></a>Is_DesignArea_Touch</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, touch.o(i.Is_DesignArea_Touch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Is_DesignArea_Touch
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetFun
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeSetDialog
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
</UL>

<P><STRONG><a name="[254]"></a>JGJDataOrig</STRONG> (Thumb, 606 bytes, Stack size 64 bytes, ui_browse10.o(i.JGJDataOrig))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = JGJDataOrig &rArr; JGJDataOrigRefresh &rArr; LCD_ShowNums_Center &rArr; LCD_ShowNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataOrigRefresh
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewFun
</UL>

<P><STRONG><a name="[255]"></a>JGJDataOrigRefresh</STRONG> (Thumb, 2096 bytes, Stack size 88 bytes, ui_browse10.o(i.JGJDataOrigRefresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = JGJDataOrigRefresh &rArr; LCD_ShowNums_Center &rArr; LCD_ShowNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText_Center
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums_Center
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataOrig
</UL>

<P><STRONG><a name="[256]"></a>JGJDataViewFun</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, ui_browse10.o(i.JGJDataViewFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = JGJDataViewFun &rArr; JGJDataViewInit &rArr; JGJPreView &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewInit
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataOrig
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
</UL>

<P><STRONG><a name="[257]"></a>JGJDataViewInit</STRONG> (Thumb, 912 bytes, Stack size 120 bytes, ui_browse10.o(i.JGJDataViewInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = JGJDataViewInit &rArr; JGJPreView &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouchSta
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJPreView
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewFun
</UL>

<P><STRONG><a name="[258]"></a>JGJPreView</STRONG> (Thumb, 950 bytes, Stack size 128 bytes, ui_browse10.o(i.JGJPreView))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = JGJPreView &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNnNums
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLineDotted
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewInit
</UL>

<P><STRONG><a name="[25a]"></a>Key_Init</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, key.o(i.Key_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Key_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d4]"></a>Key_Scan</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, key.o(i.Key_Scan))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[25b]"></a>LCD_Clear</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcd.o(i.LCD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LCD_Clear &rArr; LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[180]"></a>LCD_DrawLine</STRONG> (Thumb, 224 bytes, Stack size 68 bytes, lcd.o(i.LCD_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = LCD_DrawLine &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePouMian
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBoXing
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMianPage
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMian
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXingPage
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXing
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLineDotted
</UL>

<P><STRONG><a name="[259]"></a>LCD_DrawLineDotted</STRONG> (Thumb, 428 bytes, Stack size 96 bytes, lcd.o(i.LCD_DrawLineDotted))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = LCD_DrawLineDotted &rArr; LCD_DrawLine &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJPreView
</UL>

<P><STRONG><a name="[1d7]"></a>LCD_DrawPoint</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePouMian
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBoXing
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReactionXY
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReaction
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Scan
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowZimo_NBK
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNum_NBK
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowASC_NBK
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowCh_NBK
</UL>

<P><STRONG><a name="[121]"></a>LCD_DrawRect</STRONG> (Thumb, 110 bytes, Stack size 36 bytes, lcd.o(i.LCD_DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LCD_DrawRect &rArr; LCD_DrawLine &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetInit
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetFun
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_InitDisp
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_InitDisp
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_unioem
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_font
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaSet_Init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonDisp
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoubleButtonDisp
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectFileRefresh
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectFileOpt
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileList
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileHighLight
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Fun
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Fun
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
</UL>

<P><STRONG><a name="[f0]"></a>LCD_FillRect</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, lcd.o(i.LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDispArea
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText_Center
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChannelLine
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteTiaoXing
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteChannelLine
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTiaoxingPage
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearCurvePage
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushZXX
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushTiaoXing
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushHeatMap
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushChannelSel
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCar
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums_Center
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Biaoding_Fun
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetInit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiInit
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiFun
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZBiaoDing
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetInit
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetFun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataView_Fun
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaOptions
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Fun
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispScrollBar
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeSetDialog
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectDialog
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushKeyBoard
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBluetooth
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBattery
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_BrushMenuOneBtn
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_View_Run
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Start_Run
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Start_InitDisp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_Run
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_InitDisp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_InitDisp
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_Run
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_InitDisp
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_Run
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_InitDisp
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_Run
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_InitDisp
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_InitDisp
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_Run
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_InitDisp
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_Run
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_InitDisp
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_unioem
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_font
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaSet_Init
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOpt
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonDisp
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialogParaDisp
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKLightDisp
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectFileRefresh
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectFileOpt
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJPreView
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewInit
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewFun
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataOrigRefresh
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataOrig
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileList
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileHighLight
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Fun
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockDataViewBro_Fun
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCarTrackCur
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataView_Fun
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCarTrackOne
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBlockRebar
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Fun
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJSketch
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJRebar
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJDot
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[194]"></a>LCD_FillRectMZJ</STRONG> (Thumb, 218 bytes, Stack size 60 bytes, lcd.o(i.LCD_FillRectMZJ))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_FillRectMZJ &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDispArea
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushMZJ
</UL>

<P><STRONG><a name="[260]"></a>LCD_Init</STRONG> (Thumb, 250 bytes, Stack size 96 bytes, lcd.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = LCD_Init &rArr; LCD_Clear &rArr; LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMInit
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMCmd
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayms
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Config
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e1]"></a>LCD_ReadPoint</STRONG> (Thumb, 90 bytes, Stack size 36 bytes, lcd.o(i.LCD_ReadPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_ReadPoint &rArr; SetReadArea
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_data
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReadArea
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSaveDataCnt
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCarDist
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTime
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTempera
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGPSIcon
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispDate
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBluetooth
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBattery
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReactionXY
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReaction
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
</UL>

<P><STRONG><a name="[168]"></a>LCD_ReadRect</STRONG> (Thumb, 248 bytes, Stack size 80 bytes, lcd.o(i.LCD_ReadRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LCD_ReadRect &rArr; mymalloc &rArr; my_mem_malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymalloc
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_data
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReadArea
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReactionXY
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReaction
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Fun
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Fun
</UL>

<P><STRONG><a name="[ee]"></a>LCD_SetColor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColor))
<BR><BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Data
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSaveDataCnt
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCarDist
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePouMian
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBoXing
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMianPage
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMian
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushChannelSel
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXingPage
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXing
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Biaoding_Fun
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetInit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiInit
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiFun
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZBiaoDing
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetInit
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetFun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataView_Fun
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaOptions
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Location_Data
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeSetDialog
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectDialog
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushKeyBoard
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTime
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTempera
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGPSIcon
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispDate
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBluetooth
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBattery
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_BrushMenuOneBtn
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_View_Run
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_View_InitDisp
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Start_InitDisp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_Run
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_InitDisp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_InitDisp
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_InitDisp
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_Run
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_InitDisp
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_Run
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_InitDisp
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_InitDisp
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_Run
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_InitDisp
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_InitDisp
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarCnt_Sub
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarCnt_Dif
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DifAimFunc
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyzeCoverData_Sub
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_unioem
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_font
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOptRes
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoubleButtonDisp
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialogParaDisp
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero_Init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPageInit
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJPreView
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewInit
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataOrigRefresh
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataOrig
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileList
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileHighLight
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockDataViewBro_Fun
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispClickRebarInfo
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBlockDist
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataView_Fun
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCarNumDisp
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Init
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteJGJCurDot
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispJGJData
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJSketch
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJRebar
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJDot
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Scan
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fupd_prog
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[192]"></a>LCD_ShowASC</STRONG> (Thumb, 464 bytes, Stack size 60 bytes, lcd.o(i.LCD_ShowASC))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_ShowASC &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDispArea
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushKeyBoard
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Text
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
</UL>

<P><STRONG><a name="[267]"></a>LCD_ShowASC_NBK</STRONG> (Thumb, 420 bytes, Stack size 52 bytes, lcd.o(i.LCD_ShowASC_NBK))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LCD_ShowASC_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
</UL>

<P><STRONG><a name="[268]"></a>LCD_ShowBMP</STRONG> (Thumb, 398 bytes, Stack size 112 bytes, lcd.o(i.LCD_ShowBMP))
<BR><BR>[Stack]<UL><LI>Max Depth = 4920 + Unknown Stack Size
<LI>Call Chain = LCD_ShowBMP &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myfree
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymalloc
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDispArea
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_View_Run
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_View_InitDisp
</UL>

<P><STRONG><a name="[ef]"></a>LCD_ShowChinese</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, lcd.o(i.LCD_ShowChinese))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowCh_NBK
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowCh
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePouMian
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMianPage
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMian
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Biaoding_Fun
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetInit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiInit
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZBiaoDing
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetInit
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetFun
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeSetDialog
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushKeyBoard
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBluetooth
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBattery
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_BrushMenuOneBtn
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_View_Run
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Start_InitDisp
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_Run
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_InitDisp
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_InitDisp
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_InitDisp
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_Run
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_InitDisp
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_InitDisp
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_InitDisp
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_InitDisp
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOptRes
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero_Init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPageInit
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJPreView
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileList
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileHighLight
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Init
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataView_Fun
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCarNumDisp
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Init
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJSketch
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJRebar
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJDot
</UL>

<P><STRONG><a name="[16a]"></a>LCD_ShowNnNums</STRONG> (Thumb, 134 bytes, Stack size 48 bytes, lcd.o(i.LCD_ShowNnNums))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNum_NBK
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNum
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Location_Data
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeSetDialog
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJPreView
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Init
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Scan
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fupd_prog
</UL>

<P><STRONG><a name="[26b]"></a>LCD_ShowNum</STRONG> (Thumb, 566 bytes, Stack size 60 bytes, lcd.o(i.LCD_ShowNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_ShowNum &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDispArea
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNnNums
</UL>

<P><STRONG><a name="[26c]"></a>LCD_ShowNum_NBK</STRONG> (Thumb, 520 bytes, Stack size 52 bytes, lcd.o(i.LCD_ShowNum_NBK))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LCD_ShowNum_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNnNums
</UL>

<P><STRONG><a name="[120]"></a>LCD_ShowNums</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, lcd.o(i.LCD_ShowNums))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = LCD_ShowNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNum_NBK
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNum
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums_Center
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetInit
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetFun
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Start_InitDisp
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_InitDisp
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_Run
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_InitDisp
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_InitDisp
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCarNumDisp
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJRebar
</UL>

<P><STRONG><a name="[18c]"></a>LCD_ShowNums_Center</STRONG> (Thumb, 318 bytes, Stack size 72 bytes, lcd.o(i.LCD_ShowNums_Center))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = LCD_ShowNums_Center &rArr; LCD_ShowNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetInit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiFun
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataOrigRefresh
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteJGJCurDot
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispJGJData
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJSketch
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJRebar
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJDot
</UL>

<P><STRONG><a name="[167]"></a>LCD_ShowPicture</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, lcd.o(i.LCD_ShowPicture))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LCD_ShowPicture &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDispArea
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReactionXY
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReaction
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Start_InitDisp
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_InitDisp
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Fun
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Fun
</UL>

<P><STRONG><a name="[f3]"></a>LCD_ShowString</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lcd.o(i.LCD_ShowString))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_ShowString &rArr; LCD_ShowASC &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowASC
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowASC_NBK
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Data
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSaveDataCnt
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCarDist
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePouMian
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBoXing
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMianPage
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMian
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXingPage
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXing
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetInit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiInit
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetInit
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetFun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataView_Fun
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Location_Data
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeSetDialog
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTime
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispDate
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBattery
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_View_Run
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_View_InitDisp
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_InitDisp
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarCnt_Sub
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DifAimFunc
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyzeCoverData_Sub
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_unioem
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_font
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialogParaDisp
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero_Init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJPreView
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewInit
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileList
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileHighLight
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockDataViewBro_Fun
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispClickRebarInfo
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBlockDist
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataView_Fun
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Init
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJRebar
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fupd_prog
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[f2]"></a>LCD_ShowText</STRONG> (Thumb, 336 bytes, Stack size 40 bytes, lcd.o(i.LCD_ShowText))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowASC
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowASC_NBK
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowCh_NBK
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowCh
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText_Center
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Biaoding_Fun
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetInit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiFun
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZBiaoDing
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataView_Fun
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaOptions
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTempera
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGPSIcon
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_Run
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_InitDisp
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarCnt_Dif
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialogParaDisp
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewInit
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataOrig
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileList
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileHighLight
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockDataViewBro_Fun
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataView_Fun
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Init
</UL>

<P><STRONG><a name="[186]"></a>LCD_ShowText_Center</STRONG> (Thumb, 300 bytes, Stack size 64 bytes, lcd.o(i.LCD_ShowText_Center))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushChannelSel
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetInit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectDialog
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_InitDisp
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoubleButtonDisp
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataOrigRefresh
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteJGJCurDot
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispJGJData
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJDot
</UL>

<P><STRONG><a name="[26d]"></a>LCD_ShowZimo</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, lcd.o(i.LCD_ShowZimo))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowZimo_NBK
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowZimo_BK
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Text
</UL>

<P><STRONG><a name="[26e]"></a>LCD_ShowZimo_BK</STRONG> (Thumb, 322 bytes, Stack size 60 bytes, lcd.o(i.LCD_ShowZimo_BK))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_ShowZimo_BK &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDispArea
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowZimo
</UL>

<P><STRONG><a name="[26f]"></a>LCD_ShowZimo_NBK</STRONG> (Thumb, 282 bytes, Stack size 64 bytes, lcd.o(i.LCD_ShowZimo_NBK))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowZimo
</UL>

<P><STRONG><a name="[252]"></a>LED_Ctrl</STRONG> (Thumb, 262 bytes, Stack size 8 bytes, ledbeep.o(i.LED_Ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_Ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Beep_Init
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSysPara
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Water_Light
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Start_Run
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
</UL>

<P><STRONG><a name="[263]"></a>Lcd_Config</STRONG> (Thumb, 476 bytes, Stack size 8 bytes, lcd.o(i.Lcd_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lcd_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayms
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[270]"></a>Led_Beep_Init</STRONG> (Thumb, 230 bytes, Stack size 8 bytes, ledbeep.o(i.Led_Beep_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Led_Beep_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Ctrl
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a4]"></a>MAL_GetStatus</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, mass_mal.o(i.MAL_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_TestUnitReady_Cmd
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadFormatCapacity_Cmd
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadCapacity10_Cmd
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Format_Cmd
</UL>

<P><STRONG><a name="[272]"></a>MAL_Read</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, mass_mal.o(i.MAL_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MAL_Read &rArr; W25QXX_Read &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Memory
</UL>

<P><STRONG><a name="[273]"></a>MAL_Write</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, mass_mal.o(i.MAL_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 4248<LI>Call Chain = MAL_Write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Memory
</UL>

<P><STRONG><a name="[e]"></a>MASS_Data_Setup</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, usb_prop.o(i.MASS_Data_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MASS_Data_Setup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>MASS_GetConfigDescriptor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb_prop.o(i.MASS_GetConfigDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MASS_GetConfigDescriptor &rArr; Standard_GetDescriptorData
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>MASS_GetDeviceDescriptor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb_prop.o(i.MASS_GetDeviceDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MASS_GetDeviceDescriptor &rArr; Standard_GetDescriptorData
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>MASS_GetStringDescriptor</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usb_prop.o(i.MASS_GetStringDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MASS_GetStringDescriptor &rArr; Standard_GetDescriptorData
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>MASS_Get_Interface_Setting</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_prop.o(i.MASS_Get_Interface_Setting))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>MASS_NoData_Setup</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, usb_prop.o(i.MASS_NoData_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MASS_NoData_Setup
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_TX
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_RX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>MASS_Reset</STRONG> (Thumb, 204 bytes, Stack size 8 bytes, usb_prop.o(i.MASS_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MASS_Reset &rArr; SetEPRxStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPType
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxAddr
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxValid
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxStatus
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxAddr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBTABLE
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Status_Out
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDeviceAddress
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>MASS_Status_In</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_prop.o(i.MASS_Status_In))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>MASS_Status_Out</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_prop.o(i.MASS_Status_Out))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>MASS_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usb_prop.o(i.MASS_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MASS_init &rArr; Get_SerialNum &rArr; IntToUnicode
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SerialNum
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[118]"></a>MZKAimFunc</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, aimlib.o(i.MZKAimFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = MZKAimFunc &rArr; FindCoverTab_Sum &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindCoverTab_Sum
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarMZK
</UL>

<P><STRONG><a name="[15]"></a>Mass_Storage_ClearFeature</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usb_prop.o(i.Mass_Storage_ClearFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Mass_Storage_ClearFeature &rArr; Bot_Abort &rArr; SetEPRxStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[1ec]"></a>Mass_Storage_In</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, usb_bot.o(i.Mass_Storage_In))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Mass_Storage_In &rArr; SCSI_Read10_Cmd &rArr; Read_Memory &rArr; MAL_Read &rArr; W25QXX_Read &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxStatus
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Read10_Cmd
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP1_IN_Callback
</UL>

<P><STRONG><a name="[1ed]"></a>Mass_Storage_Out</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, usb_bot.o(i.Mass_Storage_Out))
<BR><BR>[Stack]<UL><LI>Max Depth = 4304<LI>Call Chain = Mass_Storage_Out &rArr; CBW_Decode &rArr; SCSI_Write10_Cmd &rArr; Write_Memory &rArr; MAL_Write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Read
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Write10_Cmd
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP2_OUT_Callback
</UL>

<P><STRONG><a name="[14]"></a>Mass_Storage_SetConfiguration</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, usb_prop.o(i.Mass_Storage_SetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Mass_Storage_SetConfiguration
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_TX
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_RX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>Mass_Storage_SetDeviceAddress</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_prop.o(i.Mass_Storage_SetDeviceAddress))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>NOP_Process</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_core.o(i.NOP_Process))
<BR>[Address Reference Count : 2]<UL><LI> usb_istr.o(.data)
<LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[14b]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Int_Init
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Int_Init
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_RX_DMA_Init
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_INT_EXTI_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_UART_Init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_UART_Init
</UL>

<P><STRONG><a name="[2e8]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[235]"></a>NumSetDialog</STRONG> (Thumb, 1396 bytes, Stack size 224 bytes, ui_dialog.o(i.NumSetDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = NumSetDialog &rArr; ui_ButtonTask &rArr; Get_Touch_Res &rArr; Touch_Scan &rArr; TP_Scan &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowASC
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_DesignArea_Touch
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReaction
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Fun
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOpt
</UL>

<P><STRONG><a name="[1bb]"></a>Out0_Process</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, usb_core.o(i.Out0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Out0_Process &rArr; DataStageOut &rArr; PMAToUserBufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[1d4]"></a>PMAToUserBufferCopy</STRONG> (Thumb, 34 bytes, Stack size 20 bytes, usb_mem.o(i.PMAToUserBufferCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PMAToUserBufferCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Read
</UL>

<P><STRONG><a name="[298]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_pwr.o(i.PWR_BackupAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_Init
</UL>

<P><STRONG><a name="[234]"></a>ParaTableDefault</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, optable.o(i.ParaTableDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ParaTableDefault &rArr; SaveSysPara &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Fun
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
</UL>

<P><STRONG><a name="[253]"></a>ParaTableDefaultAll</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, optable.o(i.ParaTableDefaultAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ParaTableDefaultAll &rArr; SaveSysPara &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSysPara
</UL>

<P><STRONG><a name="[1f]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[24b]"></a>Post0_Process</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, usb_core.o(i.Post0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Post0_Process &rArr; SetEPRxCount
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
</UL>

<P><STRONG><a name="[357]"></a>PowerOffCnt_Reset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, systic.o(i.PowerOffCnt_Reset))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
</UL>

<P><STRONG><a name="[27f]"></a>PowerOn</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, usb_pwr.o(i.PowerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PowerOn
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Cable_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_init
</UL>

<P><STRONG><a name="[289]"></a>Power_Init</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, power.o(i.Power_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Power_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwrOnFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[28b]"></a>PromptDialog</STRONG> (Thumb, 1092 bytes, Stack size 112 bytes, ui_dialog.o(i.PromptDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = PromptDialog &rArr; ui_ButtonTask &rArr; Get_Touch_Res &rArr; Touch_Scan &rArr; TP_Scan &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSampFile
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlockFile
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveJGJFile
</UL>

<P><STRONG><a name="[28c]"></a>PromptTone_Once</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ledbeep.o(i.PromptTone_Once))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PromptTone_Once
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSampFile
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlockFile
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveJGJFile
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwrOnFunc
</UL>

<P><STRONG><a name="[230]"></a>PwrOffFunc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, power.o(i.PwrOffFunc))
<BR><BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBattery
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[28a]"></a>PwrOnFunc</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, power.o(i.PwrOnFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PwrOnFunc &rArr; PromptTone_Once
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptTone_Once
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Init
</UL>

<P><STRONG><a name="[14f]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_ADCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_Adc_Init
</UL>

<P><STRONG><a name="[134]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_RX_DMA_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_UART_Init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMA_Init
</UL>

<P><STRONG><a name="[15b]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Int_Init
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Int_Init
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BkLedPWM_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_UART_Init
</UL>

<P><STRONG><a name="[2e4]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[144]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_Init
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Init
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Beep_Init
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Init
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BkLed_Init
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_Adc_Init
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_RST_Init
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_INT_EXTI_Init
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_UART_Init
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Port_Init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_UART_Init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Port_Init
</UL>

<P><STRONG><a name="[ea]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[2e5]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[299]"></a>RCC_LSEConfig</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_Init
</UL>

<P><STRONG><a name="[2ca]"></a>RCC_USBCLKConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_USBCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[28d]"></a>RX8010_Delay</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, rx8010.o(i.RX8010_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RX8010_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Wait_Ack
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Send_Byte
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Read_Byte
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_NAck
</UL>

<P><STRONG><a name="[28f]"></a>RX8010_IIC_NAck</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, rx8010.o(i.RX8010_IIC_NAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RX8010_IIC_NAck &rArr; RX8010_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_SDA_OUT
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_RD_Reg
</UL>

<P><STRONG><a name="[291]"></a>RX8010_IIC_Read_Byte</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, rx8010.o(i.RX8010_IIC_Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RX8010_IIC_Read_Byte &rArr; RX8010_SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_SDA_IN
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_delay_us
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_RD_Reg
</UL>

<P><STRONG><a name="[293]"></a>RX8010_IIC_Send_Byte</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, rx8010.o(i.RX8010_IIC_Send_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RX8010_IIC_Send_Byte &rArr; RX8010_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_SDA_OUT
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_WR_Reg
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_RD_Reg
</UL>

<P><STRONG><a name="[294]"></a>RX8010_IIC_Start</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, rx8010.o(i.RX8010_IIC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RX8010_IIC_Start &rArr; RX8010_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_SDA_OUT
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_WR_Reg
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_RD_Reg
</UL>

<P><STRONG><a name="[295]"></a>RX8010_IIC_Stop</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, rx8010.o(i.RX8010_IIC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RX8010_IIC_Stop &rArr; RX8010_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_SDA_OUT
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_WR_Reg
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_RD_Reg
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Wait_Ack
</UL>

<P><STRONG><a name="[296]"></a>RX8010_IIC_Wait_Ack</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, rx8010.o(i.RX8010_IIC_Wait_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RX8010_IIC_Wait_Ack &rArr; RX8010_IIC_Stop &rArr; RX8010_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_SDA_IN
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_delay_us
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Stop
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_WR_Reg
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_RD_Reg
</UL>

<P><STRONG><a name="[28e]"></a>RX8010_IIC_delay_us</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rx8010.o(i.RX8010_IIC_delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_TimeRst
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Wait_Ack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Stop
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Start
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Read_Byte
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_Delay
</UL>

<P><STRONG><a name="[297]"></a>RX8010_Init</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, rx8010.o(i.RX8010_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = RX8010_Init &rArr; RX8010_WR_Reg &rArr; RX8010_IIC_Wait_Ack &rArr; RX8010_IIC_Stop &rArr; RX8010_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_TamperPinCmd
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_WR_Reg
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_SDA_IN
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29c]"></a>RX8010_RD_Reg</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, rx8010.o(i.RX8010_RD_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = RX8010_RD_Reg &rArr; RX8010_IIC_Wait_Ack &rArr; RX8010_IIC_Stop &rArr; RX8010_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Wait_Ack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Stop
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Start
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Send_Byte
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Read_Byte
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_NAck
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_ReadTime
</UL>

<P><STRONG><a name="[251]"></a>RX8010_ReadTime</STRONG> (Thumb, 330 bytes, Stack size 24 bytes, rx8010.o(i.RX8010_ReadTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = RX8010_ReadTime &rArr; RX8010_TimeRst &rArr; RX8010_SetTime &rArr; RX8010_WR_Reg &rArr; RX8010_IIC_Wait_Ack &rArr; RX8010_IIC_Stop &rArr; RX8010_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_TimeRst
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_RD_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSysPara
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>

<P><STRONG><a name="[292]"></a>RX8010_SDA_IN</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, rx8010.o(i.RX8010_SDA_IN))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RX8010_SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_Init
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Wait_Ack
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Read_Byte
</UL>

<P><STRONG><a name="[290]"></a>RX8010_SDA_OUT</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, rx8010.o(i.RX8010_SDA_OUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RX8010_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Stop
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Start
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Send_Byte
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_NAck
</UL>

<P><STRONG><a name="[29e]"></a>RX8010_SetTime</STRONG> (Thumb, 392 bytes, Stack size 16 bytes, rx8010.o(i.RX8010_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = RX8010_SetTime &rArr; RX8010_WR_Reg &rArr; RX8010_IIC_Wait_Ack &rArr; RX8010_IIC_Stop &rArr; RX8010_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_WR_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeSetDialog
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_TimeRst
</UL>

<P><STRONG><a name="[29d]"></a>RX8010_TimeRst</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, rx8010.o(i.RX8010_TimeRst))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = RX8010_TimeRst &rArr; RX8010_SetTime &rArr; RX8010_WR_Reg &rArr; RX8010_IIC_Wait_Ack &rArr; RX8010_IIC_Stop &rArr; RX8010_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_SetTime
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_WR_Reg
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_ReadTime
</UL>

<P><STRONG><a name="[29b]"></a>RX8010_WR_Reg</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rx8010.o(i.RX8010_WR_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = RX8010_WR_Reg &rArr; RX8010_IIC_Wait_Ack &rArr; RX8010_IIC_Stop &rArr; RX8010_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Wait_Ack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Stop
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Start
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_IIC_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_Init
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_SetTime
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_TimeRst
</UL>

<P><STRONG><a name="[196]"></a>RadioButtonDisp</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, ui_paraset10.o(i.RadioButtonDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = RadioButtonDisp &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOpt
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPageInit
</UL>

<P><STRONG><a name="[29f]"></a>ReadFileData</STRONG> (Thumb, 1162 bytes, Stack size 24 bytes, ui_browse10.o(i.ReadFileData))
<BR><BR>[Stack]<UL><LI>Max Depth = 4832<LI>Call Chain = ReadFileData &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
</UL>

<P><STRONG><a name="[2a0]"></a>ReadFileHead</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, ui_browse10.o(i.ReadFileHead))
<BR><BR>[Stack]<UL><LI>Max Depth = 4824<LI>Call Chain = ReadFileHead &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
</UL>

<P><STRONG><a name="[250]"></a>ReadSysPara</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, oppara.o(i.ReadSysPara))
<BR><BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSysPara
</UL>

<P><STRONG><a name="[2a1]"></a>Read_Memory</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, memory.o(i.Read_Memory))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Read_Memory &rArr; MAL_Read &rArr; W25QXX_Read &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Write
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Read10_Cmd
</UL>

<P><STRONG><a name="[102]"></a>ReflashRedDot</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, aimlib.o(i.ReflashRedDot))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ReflashRedDot &rArr; BrushCar &rArr; LCD_FillRect &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCar
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_HD
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_Block
</UL>

<P><STRONG><a name="[2a3]"></a>SCSI_Address_Management</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, usb_scsi.o(i.SCSI_Address_Management))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SCSI_Address_Management &rArr; Set_CSW &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Write10_Cmd
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Read10_Cmd
</UL>

<P><STRONG><a name="[1ac]"></a>SCSI_Format_Cmd</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usb_scsi.o(i.SCSI_Format_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SCSI_Format_Cmd &rArr; Set_CSW &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[1a2]"></a>SCSI_Inquiry_Cmd</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, usb_scsi.o(i.SCSI_Inquiry_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SCSI_Inquiry_Cmd &rArr; Transfer_Data_Request &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Data_Request
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[1ad]"></a>SCSI_Invalid_Cmd</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, usb_scsi.o(i.SCSI_Invalid_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SCSI_Invalid_Cmd &rArr; Set_CSW &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[1a5]"></a>SCSI_ModeSense10_Cmd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb_scsi.o(i.SCSI_ModeSense10_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SCSI_ModeSense10_Cmd &rArr; Transfer_Data_Request &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Data_Request
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[1a4]"></a>SCSI_ModeSense6_Cmd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb_scsi.o(i.SCSI_ModeSense6_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SCSI_ModeSense6_Cmd &rArr; Transfer_Data_Request &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Data_Request
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[1a9]"></a>SCSI_Read10_Cmd</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, usb_scsi.o(i.SCSI_Read10_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SCSI_Read10_Cmd &rArr; Read_Memory &rArr; MAL_Read &rArr; W25QXX_Read &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Address_Management
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Memory
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_In
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[1a7]"></a>SCSI_ReadCapacity10_Cmd</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, usb_scsi.o(i.SCSI_ReadCapacity10_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SCSI_ReadCapacity10_Cmd &rArr; Transfer_Data_Request &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Data_Request
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[1a6]"></a>SCSI_ReadFormatCapacity_Cmd</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, usb_scsi.o(i.SCSI_ReadFormatCapacity_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SCSI_ReadFormatCapacity_Cmd &rArr; Transfer_Data_Request &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Data_Request
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[1a1]"></a>SCSI_RequestSense_Cmd</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, usb_scsi.o(i.SCSI_RequestSense_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SCSI_RequestSense_Cmd &rArr; Transfer_Data_Request &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Data_Request
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[1a3]"></a>SCSI_Start_Stop_Unit_Cmd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb_scsi.o(i.SCSI_Start_Stop_Unit_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SCSI_Start_Stop_Unit_Cmd &rArr; Set_CSW &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[1a8]"></a>SCSI_TestUnitReady_Cmd</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usb_scsi.o(i.SCSI_TestUnitReady_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SCSI_TestUnitReady_Cmd &rArr; Set_CSW &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[1ab]"></a>SCSI_Verify10_Cmd</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, usb_scsi.o(i.SCSI_Verify10_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SCSI_Verify10_Cmd &rArr; Set_CSW &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[1aa]"></a>SCSI_Write10_Cmd</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, usb_scsi.o(i.SCSI_Write10_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 4288<LI>Call Chain = SCSI_Write10_Cmd &rArr; Write_Memory &rArr; MAL_Write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxStatus
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Address_Management
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Memory
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_Out
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[23e]"></a>SDA_IN</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ft6336u.o(i.SDA_IN))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[23a]"></a>SDA_OUT</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ft6336u.o(i.SDA_OUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
</UL>

<P><STRONG><a name="[2f5]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
</UL>

<P><STRONG><a name="[2a8]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>

<P><STRONG><a name="[2aa]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>

<P><STRONG><a name="[2a9]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>

<P><STRONG><a name="[2f4]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
</UL>

<P><STRONG><a name="[2a7]"></a>SPI_ReadWriteByte</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, w25qxx.o(i.SPI_ReadWriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Qxx_Enable4ByteAddr
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Page
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Enable
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadSR
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadID
</UL>

<P><STRONG><a name="[1d]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2ab]"></a>SWDelay_us</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ct1711.o(i.SWDelay_us))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWire_Rst
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWire_Read_Bit
</UL>

<P><STRONG><a name="[1b3]"></a>SWire_Read_Bit</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, ct1711.o(i.SWire_Read_Bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SWire_Read_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWDelay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWire_Read_Byte
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Temp_Degree
</UL>

<P><STRONG><a name="[1b4]"></a>SWire_Read_Byte</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, ct1711.o(i.SWire_Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SWire_Read_Byte &rArr; SWire_Read_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWire_Read_Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Temp_Degree
</UL>

<P><STRONG><a name="[1b2]"></a>SWire_Rst</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, ct1711.o(i.SWire_Rst))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SWire_Rst
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWDelay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Start
</UL>

<P><STRONG><a name="[238]"></a>SampParaOptions</STRONG> (Thumb, 974 bytes, Stack size 80 bytes, ui_sampset.o(i.SampParaOptions))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = SampParaOptions &rArr; ui_DispGJName &rArr; Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaSet_Init
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Init
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Fun
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
</UL>

<P><STRONG><a name="[2ac]"></a>SampParaSet_Init</STRONG> (Thumb, 326 bytes, Stack size 128 bytes, ui_sampset.o(i.SampParaSet_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = SampParaSet_Init &rArr; SampParaOptions &rArr; ui_DispGJName &rArr; Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaOptions
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouchSta
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_InitDisp
</UL>

<P><STRONG><a name="[2ad]"></a>SampleDataView_Fun</STRONG> (Thumb, 846 bytes, Stack size 96 bytes, ui_analyze.o(i.SampleDataView_Fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = SampleDataView_Fun &rArr; ui_DispGJName &rArr; Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_Run
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_Run
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_Run
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_Run
</UL>

<P><STRONG><a name="[2ae]"></a>SampleJGJ_Init</STRONG> (Thumb, 914 bytes, Stack size 232 bytes, ui_sampjgj.o(i.SampleJGJ_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = SampleJGJ_Init &rArr; BrushJGJRebar &rArr; DispJGJData &rArr; LCD_ShowNums_Center &rArr; LCD_ShowNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSaveDataCnt
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushZXX
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushMZJ
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums_Center
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouchSta
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJSketch
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJRebar
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJDot
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_InitDisp
</UL>

<P><STRONG><a name="[103]"></a>SaveAdcDataBuf</STRONG> (Thumb, 4250 bytes, Stack size 168 bytes, aimlib.o(i.SaveAdcDataBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = SaveAdcDataBuf &rArr; GetSourceData &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SourceBufAddData
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSourceData
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_MZK
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_HD
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_Block
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_JGJ
</UL>

<P><STRONG><a name="[364]"></a>SaveBlockData</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, ui_sampblock.o(i.SaveBlockData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SaveBlockData
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
</UL>

<P><STRONG><a name="[2b0]"></a>SaveBlockFile</STRONG> (Thumb, 614 bytes, Stack size 48 bytes, ui_sampblock.o(i.SaveBlockFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 4856 + Unknown Stack Size
<LI>Call Chain = SaveBlockFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptTone_Once
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHouDuAvg
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
</UL>

<P><STRONG><a name="[368]"></a>SaveDotData</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, opdata.o(i.SaveDotData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SaveDotData
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
</UL>

<P><STRONG><a name="[2b3]"></a>SaveJGJFile</STRONG> (Thumb, 338 bytes, Stack size 48 bytes, ui_sampjgj.o(i.SaveJGJFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 4856 + Unknown Stack Size
<LI>Call Chain = SaveJGJFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptTone_Once
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJGJSaveCnt
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJGJHouDuAvg
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
</UL>

<P><STRONG><a name="[2b6]"></a>SaveSampFile</STRONG> (Thumb, 806 bytes, Stack size 48 bytes, ui_sample10.o(i.SaveSampFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 4936 + Unknown Stack Size
<LI>Call Chain = SaveSampFile &rArr; BT_RealSendFile &rArr; HC_RDFILE_Answer &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptTone_Once
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_RealSendFile
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHouDuAvg
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
</UL>

<P><STRONG><a name="[2b7]"></a>SaveSourceDataFile</STRONG> (Thumb, 346 bytes, Stack size 96 bytes, aimlib.o(i.SaveSourceDataFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 4904 + Unknown Stack Size
<LI>Call Chain = SaveSourceDataFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
</UL>

<P><STRONG><a name="[158]"></a>SaveSysPara</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, oppara.o(i.SaveSysPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SaveSysPara &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_us
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaTableDefaultAll
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSysPara
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Biaoding_Fun
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_Run
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaTableDefault
</UL>

<P><STRONG><a name="[2be]"></a>Scan_FileCount</STRONG> (Thumb, 74 bytes, Stack size 56 bytes, opfile.o(i.Scan_FileCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 4792<LI>Call Chain = Scan_FileCount &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_View_InitDisp
</UL>

<P><STRONG><a name="[2c0]"></a>Scan_FileIndex</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, opfile.o(i.Scan_FileIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 4792<LI>Call Chain = Scan_FileIndex &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_InitDisp
</UL>

<P><STRONG><a name="[2c1]"></a>Scan_OnePageFiles</STRONG> (Thumb, 534 bytes, Stack size 256 bytes, opfile.o(i.Scan_OnePageFiles))
<BR><BR>[Stack]<UL><LI>Max Depth = 4992 + Unknown Stack Size
<LI>Call Chain = Scan_OnePageFiles &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_InitDisp
</UL>

<P><STRONG><a name="[236]"></a>SelectDialog</STRONG> (Thumb, 1514 bytes, Stack size 120 bytes, ui_dialog.o(i.SelectDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = SelectDialog &rArr; ui_ButtonTask &rArr; Get_Touch_Res &rArr; Touch_Scan &rArr; TP_Scan &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText_Center
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_DesignArea_Touch
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReaction
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Fun
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOpt
</UL>

<P><STRONG><a name="[2c2]"></a>SelectFileOpt</STRONG> (Thumb, 302 bytes, Stack size 48 bytes, ui_browse10.o(i.SelectFileOpt))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = SelectFileOpt &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myfree
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymalloc
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
</UL>

<P><STRONG><a name="[2c3]"></a>SelectFileRefresh</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, ui_browse10.o(i.SelectFileRefresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SelectFileRefresh &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
</UL>

<P><STRONG><a name="[f8]"></a>SendUiNo</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, config_ui.o(i.SendUiNo))
<BR><BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Fun
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_View_Run
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Start_Run
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_Run
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_Run
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_Run
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_Run
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_Run
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
</UL>

<P><STRONG><a name="[278]"></a>SetBTABLE</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_regs.o(i.SetBTABLE))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
</UL>

<P><STRONG><a name="[2c4]"></a>SetBkLedPercent</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bkled.o(i.SetBkLedPercent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetBkLedPercent
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[24a]"></a>SetDeviceAddress</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, usb_core.o(i.SetDeviceAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetDeviceAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
</UL>

<P><STRONG><a name="[25f]"></a>SetDispArea</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, lcd.o(i.SetDispArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRectMZJ
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowBMP
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowASC
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPicture
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowZimo_BK
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNum
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowCh
</UL>

<P><STRONG><a name="[27a]"></a>SetEPRxAddr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPRxAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPRxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
</UL>

<P><STRONG><a name="[27b]"></a>SetEPRxCount</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPRxCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPRxCount
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
</UL>

<P><STRONG><a name="[177]"></a>SetEPRxStatus</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, usb_regs.o(i.SetEPRxStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetEPRxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Write10_Cmd
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_In
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Memory
</UL>

<P><STRONG><a name="[27e]"></a>SetEPRxValid</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPRxValid))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPRxValid
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
</UL>

<P><STRONG><a name="[27c]"></a>SetEPTxAddr</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPTxAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPTxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
</UL>

<P><STRONG><a name="[1d1]"></a>SetEPTxCount</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPTxCount))
<BR><BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Write
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Memory
</UL>

<P><STRONG><a name="[176]"></a>SetEPTxStatus</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, usb_regs.o(i.SetEPTxStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetEPTxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Data_Request
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Memory
</UL>

<P><STRONG><a name="[279]"></a>SetEPType</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPType))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPType
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
</UL>

<P><STRONG><a name="[2c6]"></a>SetJGJHegeCnt</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, ui_sampjgj.o(i.SetJGJHegeCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SetJGJHegeCnt &rArr; GetJGJHegeFlagAfter &rArr; IsRebarHege &rArr; __aeabi_f2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJGJHegeFlagAfter
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteJGJCurDot
</UL>

<P><STRONG><a name="[265]"></a>SetReadArea</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, lcd.o(i.SetReadArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetReadArea
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadPoint
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRect
</UL>

<P><STRONG><a name="[1a0]"></a>Set_CSW</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, usb_bot.o(i.Set_CSW))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Set_CSW &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Address_Management
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Write10_Cmd
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Verify10_Cmd
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_TestUnitReady_Cmd
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Start_Stop_Unit_Cmd
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadFormatCapacity_Cmd
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadCapacity10_Cmd
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Read10_Cmd
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Invalid_Cmd
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Format_Cmd
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_Out
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_In
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Memory
</UL>

<P><STRONG><a name="[19f]"></a>Set_Scsi_Sense_Data</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_scsi.o(i.Set_Scsi_Sense_Data))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Address_Management
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Write10_Cmd
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Verify10_Cmd
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_TestUnitReady_Cmd
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadFormatCapacity_Cmd
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadCapacity10_Cmd
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Read10_Cmd
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Invalid_Cmd
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Format_Cmd
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_Out
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[2c9]"></a>Set_USBClock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, hw_config.o(i.Set_USBClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_USBClock
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_USBCLKConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ba]"></a>Setup0_Process</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, usb_core.o(i.Setup0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteSwap
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Setup0
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[1e8]"></a>Show_Text</STRONG> (Thumb, 126 bytes, Stack size 144 bytes, pytext.o(i.Show_Text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowASC
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowZimo
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HzMat
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileList
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileHighLight
</UL>

<P><STRONG><a name="[fc]"></a>Sleep_ms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, delay.o(i.Sleep_ms))
<BR><BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unioem_init
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_init
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSysPara
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Biaoding_Fun
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiFun
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZBiaoDing
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptTone_Once
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSampFile
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouchSta
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChargeStep
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_View_Run
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Start_Run
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_Run
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_Run
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_Run
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_unioem
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_font
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockDataViewBro_Fun
</UL>

<P><STRONG><a name="[2bb]"></a>Sleep_us</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, delay.o(i.Sleep_us))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
</UL>

<P><STRONG><a name="[2af]"></a>SourceBufAddData</STRONG> (Thumb, 310 bytes, Stack size 8 bytes, aimlib.o(i.SourceBufAddData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SourceBufAddData
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAdcDataBuf
</UL>

<P><STRONG><a name="[203]"></a>SourceBufGetData</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, aimlib.o(i.SourceBufGetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SourceBufGetData
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FilterHandler_Sum
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FilterHandler_Sub_Dif
</UL>

<P><STRONG><a name="[285]"></a>Standard_ClearFeature</STRONG> (Thumb, 342 bytes, Stack size 32 bytes, usb_core.o(i.Standard_ClearFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Standard_ClearFeature &rArr; SetEPTxStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_TX
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_RX
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[74]"></a>Standard_GetConfiguration</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetConfiguration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(i.Data_Setup0)
</UL>
<P><STRONG><a name="[275]"></a>Standard_GetDescriptorData</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetDescriptorData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetDescriptorData
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_GetStringDescriptor
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_GetDeviceDescriptor
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_GetConfigDescriptor
</UL>

<P><STRONG><a name="[75]"></a>Standard_GetInterface</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetInterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(i.Data_Setup0)
</UL>
<P><STRONG><a name="[73]"></a>Standard_GetStatus</STRONG> (Thumb, 238 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(i.Data_Setup0)
</UL>
<P><STRONG><a name="[283]"></a>Standard_SetConfiguration</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, usb_core.o(i.Standard_SetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetConfiguration
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[284]"></a>Standard_SetDeviceFeature</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usb_core.o(i.Standard_SetDeviceFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetDeviceFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[287]"></a>Standard_SetEndPointFeature</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, usb_core.o(i.Standard_SetEndPointFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Standard_SetEndPointFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[286]"></a>Standard_SetInterface</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, usb_core.o(i.Standard_SetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[11a]"></a>SubAimFunc</STRONG> (Thumb, 1290 bytes, Stack size 176 bytes, aimlib.o(i.SubAimFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = SubAimFunc &rArr; GetRebarCnt_Dif &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubCoverModify
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarCnt_Sub
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRebarCnt_Dif
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindCoverTab_Sub
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimRebarSub
</UL>

<P><STRONG><a name="[2cc]"></a>SubCoverModify</STRONG> (Thumb, 72 bytes, Stack size 36 bytes, aimlib.o(i.SubCoverModify))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SubCoverModify
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubAimFunc
</UL>

<P><STRONG><a name="[2cd]"></a>SysParaOpt</STRONG> (Thumb, 636 bytes, Stack size 32 bytes, ui_paraset10.o(i.SysParaOpt))
<BR><BR>[Stack]<UL><LI>Max Depth = 4960 + Unknown Stack Size
<LI>Call Chain = SysParaOpt &rArr; update_unioem &rArr; updata_fontx &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeSetDialog
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_unioem
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_font
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SetDefault
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonDisp
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
</UL>

<P><STRONG><a name="[2d1]"></a>SysParaOptRes</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, ui_paraset10.o(i.SysParaOptRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = SysParaOptRes &rArr; LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
</UL>

<P><STRONG><a name="[2d2]"></a>SysParaSet_Init</STRONG> (Thumb, 98 bytes, Stack size 48 bytes, ui_paraset10.o(i.SysParaSet_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = SysParaSet_Init &rArr; BrushPageInit &rArr; DoubleButtonDisp &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPageInit
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_InitDisp
</UL>

<P><STRONG><a name="[20]"></a>SysTick_Handler</STRONG> (Thumb, 238 bytes, Stack size 8 bytes, systic.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SysTick_Handler &rArr; RX8010_ReadTime &rArr; RX8010_TimeRst &rArr; RX8010_SetTime &rArr; RX8010_WR_Reg &rArr; RX8010_IIC_Wait_Ack &rArr; RX8010_IIC_Stop &rArr; RX8010_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_ReadTime
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBkLedPercent
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwrOffFunc
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_CountDown
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_CvrWait
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Feed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2bd]"></a>SysTick_Init</STRONG> (Thumb, 156 bytes, Stack size 12 bytes, systic.o(i.SysTick_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysTick_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo48
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(.text)
</UL>
<P><STRONG><a name="[3d]"></a>TIM2_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timer.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM2_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Beep_Off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2d8]"></a>TIM2_Int_Init</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, timer.o(i.TIM2_Int_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM2_Int_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>TIM4_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, timer.o(i.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM4_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Feed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2da]"></a>TIM4_Int_Init</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, timer.o(i.TIM4_Int_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM4_Int_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d6]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Beep_On
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[15f]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Int_Init
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Int_Init
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BkLedPWM_Init
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Beep_On
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Beep_Off
</UL>

<P><STRONG><a name="[2d5]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[2d9]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Int_Init
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Int_Init
</UL>

<P><STRONG><a name="[15d]"></a>TIM_OC3Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BkLedPWM_Init
</UL>

<P><STRONG><a name="[15e]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC3PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BkLedPWM_Init
</UL>

<P><STRONG><a name="[2c5]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetCompare3))
<BR><BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBkLedPercent
</UL>

<P><STRONG><a name="[15c]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Int_Init
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Int_Init
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BkLedPWM_Init
</UL>

<P><STRONG><a name="[1fc]"></a>TP_INT_EXTI_Init</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, ft6336u.o(i.TP_INT_EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TP_INT_EXTI_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT6336_Init
</UL>

<P><STRONG><a name="[1ef]"></a>TP_RD_Reg</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, ft6336u.o(i.TP_RD_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TP_RD_Reg &rArr; IIC_Read_Byte &rArr; IIC_NAck &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
</UL>

<P><STRONG><a name="[1f9]"></a>TP_RST_Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ft6336u.o(i.TP_RST_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TP_RST_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT6336_Init
</UL>

<P><STRONG><a name="[2dd]"></a>TP_Scan</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, ft6336u.o(i.TP_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = TP_Scan &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNnNums
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Scan
</UL>

<P><STRONG><a name="[1fb]"></a>TP_delay_ms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ft6336u.o(i.TP_delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT6336_Init
</UL>

<P><STRONG><a name="[23b]"></a>TP_delay_us</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ft6336u.o(i.TP_delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
</UL>

<P><STRONG><a name="[237]"></a>TextSetDialog</STRONG> (Thumb, 5066 bytes, Stack size 152 bytes, ui_dialog.o(i.TextSetDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = TextSetDialog &rArr; Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowASC
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushKeyBoard
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Text
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReaction
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Fun
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOpt
</UL>

<P><STRONG><a name="[2ce]"></a>TimeSetDialog</STRONG> (Thumb, 1812 bytes, Stack size 208 bytes, ui_dialog.o(i.TimeSetDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = TimeSetDialog &rArr; ui_ButtonTask &rArr; Get_Touch_Res &rArr; Touch_Scan &rArr; TP_Scan &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_SetTime
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNnNums
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_DesignArea_Touch
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReaction
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOpt
</UL>

<P><STRONG><a name="[2d7]"></a>Touch_Beep_Off</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timer.o(i.Touch_Beep_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Touch_Beep_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[22c]"></a>Touch_Beep_On</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, timer.o(i.Touch_Beep_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Touch_Beep_On
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Touch_Res
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_View_Run
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_Run
</UL>

<P><STRONG><a name="[22b]"></a>Touch_Scan</STRONG> (Thumb, 516 bytes, Stack size 8 bytes, touch.o(i.Touch_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = Touch_Scan &rArr; TP_Scan &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Scan
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Touch_Res
</UL>

<P><STRONG><a name="[2a5]"></a>Transfer_Data_Request</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, usb_bot.o(i.Transfer_Data_Request))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Transfer_Data_Request &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_RequestSense_Cmd
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadFormatCapacity_Cmd
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadCapacity10_Cmd
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ModeSense6_Cmd
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ModeSense10_Cmd
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Inquiry_Cmd
</UL>

<P><STRONG><a name="[55]"></a>UART4_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, uart.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART4_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>USART1_IRQHandler</STRONG> (Thumb, 156 bytes, Stack size 144 bytes, hcbt20.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = USART1_IRQHandler &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetCurrDataCounter
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetCurrDataCounter
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2e2]"></a>USART2_Init</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, uart.o(i.USART2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USART2_Init &rArr; USART2_RX_DMA_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_RX_DMA_Init
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1cd]"></a>USART2_RX_DMA_Init</STRONG> (Thumb, 230 bytes, Stack size 56 bytes, uart.o(i.USART2_RX_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USART2_RX_DMA_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetCurrDataCounter
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel6_IRQHandler
</UL>

<P><STRONG><a name="[48]"></a>USART3_IRQHandler</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, gps.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART3_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetCurrDataCounter
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetCurrDataCounter
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2df]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[14d]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_UART_Init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_UART_Init
</UL>

<P><STRONG><a name="[130]"></a>USART_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_RX_DMA_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_UART_Init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMA_Init
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_DMASend
</UL>

<P><STRONG><a name="[149]"></a>USART_DeInit</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f10x_usart.o(i.USART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_UART_Init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_UART_Init
</UL>

<P><STRONG><a name="[2de]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[14c]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_UART_Init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_UART_Init
</UL>

<P><STRONG><a name="[14a]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_UART_Init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_UART_Init
</UL>

<P><STRONG><a name="[2e0]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[2e1]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[288]"></a>USB_Cable_Config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hw_config.o(i.USB_Cable_Config))
<BR><BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn
</UL>

<P><STRONG><a name="[34]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_it.o(i.USB_HP_CAN1_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_HP_CAN1_TX_IRQHandler &rArr; CTR_HP
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_HP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[34a]"></a>USB_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, usb_init.o(i.USB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e7]"></a>USB_Interrupts_Config</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, hw_config.o(i.USB_Interrupts_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_Interrupts_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e9]"></a>USB_Istr</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, usb_istr.o(i.USB_Istr))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USB_Istr &rArr; CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[35]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f10x_it.o(i.USB_LP_CAN1_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = USB_LP_CAN1_RX0_IRQHandler &rArr; USB_Istr &rArr; CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[349]"></a>USB_Memery_Init_AK</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, usb_init.o(i.USB_Memery_Init_AK))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[280]"></a>USB_SIL_Init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usb_sil.o(i.USB_SIL_Init))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_init
</UL>

<P><STRONG><a name="[281]"></a>USB_SIL_Read</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, usb_sil.o(i.USB_SIL_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USB_SIL_Read &rArr; PMAToUserBufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMAToUserBufferCopy
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPRxCount
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPRxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_Out
</UL>

<P><STRONG><a name="[2a2]"></a>USB_SIL_Write</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, usb_sil.o(i.USB_SIL_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserToPMABufferCopy
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPTxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Data_Request
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Memory
</UL>

<P><STRONG><a name="[34c]"></a>UiInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, config_ui.o(i.UiInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UiInit
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34d]"></a>UiSchedule</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, config_ui.o(i.UiSchedule))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UiSchedule
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2eb]"></a>UpdateMZK</STRONG> (Thumb, 492 bytes, Stack size 80 bytes, opdata.o(i.UpdateMZK))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = UpdateMZK &rArr; log10 &rArr; log &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSignalData
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushZXX
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushMZJ
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
</UL>

<P><STRONG><a name="[1c]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[1d0]"></a>UserToPMABufferCopy</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, usb_mem.o(i.UserToPMABufferCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UserToPMABufferCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Write
</UL>

<P><STRONG><a name="[2f0]"></a>W25QXX_Erase_Sector</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, w25qxx.o(i.W25QXX_Erase_Sector))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = W25QXX_Erase_Sector &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Enable
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Wait_Busy
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_unioem
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_font
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
</UL>

<P><STRONG><a name="[2f3]"></a>W25QXX_Init</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, w25qxx.o(i.W25QXX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = W25QXX_Init &rArr; W25Qxx_Enable4ByteAddr &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Qxx_Enable4ByteAddr
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadID
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unioem_init
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[227]"></a>W25QXX_Read</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, w25qxx.o(i.W25QXX_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = W25QXX_Read &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unioem_init
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_unioem
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_font
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HzMat
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_Read
</UL>

<P><STRONG><a name="[2f6]"></a>W25QXX_ReadID</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, w25qxx.o(i.W25QXX_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = W25QXX_ReadID &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
</UL>

<P><STRONG><a name="[2f8]"></a>W25QXX_ReadSR</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, w25qxx.o(i.W25QXX_ReadSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Qxx_Enable4ByteAddr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Wait_Busy
</UL>

<P><STRONG><a name="[2f2]"></a>W25QXX_Wait_Busy</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, w25qxx.o(i.W25QXX_Wait_Busy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadSR
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Page
</UL>

<P><STRONG><a name="[274]"></a>W25QXX_Write</STRONG> (Thumb, 220 bytes, Stack size 4136 bytes, w25qxx.o(i.W25QXX_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 4224<LI>Call Chain = W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_NoCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_unioem
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_font
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updata_fontx
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_Write
</UL>

<P><STRONG><a name="[2f1]"></a>W25QXX_Write_Enable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, w25qxx.o(i.W25QXX_Write_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = W25QXX_Write_Enable &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Page
</UL>

<P><STRONG><a name="[2f9]"></a>W25QXX_Write_NoCheck</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, w25qxx.o(i.W25QXX_Write_NoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Page
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
</UL>

<P><STRONG><a name="[2fa]"></a>W25QXX_Write_Page</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, w25qxx.o(i.W25QXX_Write_Page))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Enable
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Wait_Busy
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_NoCheck
</UL>

<P><STRONG><a name="[2f7]"></a>W25Qxx_Enable4ByteAddr</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, w25qxx.o(i.W25Qxx_Enable4ByteAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = W25Qxx_Enable4ByteAddr &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadSR
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
</UL>

<P><STRONG><a name="[2fb]"></a>Water_Light</STRONG> (Thumb, 308 bytes, Stack size 8 bytes, ui_main.o(i.Water_Light))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Water_Light &rArr; LED_Ctrl
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
</UL>

<P><STRONG><a name="[2fc]"></a>WriteJGJCurDot</STRONG> (Thumb, 666 bytes, Stack size 64 bytes, ui_sampjgj.o(i.WriteJGJCurDot))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = WriteJGJCurDot &rArr; LCD_ShowNums_Center &rArr; LCD_ShowNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText_Center
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums_Center
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetJGJHegeCnt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BankersRounding
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
</UL>

<P><STRONG><a name="[2a6]"></a>Write_Memory</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, memory.o(i.Write_Memory))
<BR><BR>[Stack]<UL><LI>Max Depth = 4272<LI>Call Chain = Write_Memory &rArr; MAL_Write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxStatus
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Write10_Cmd
</UL>

<P><STRONG><a name="[cc]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[2fe]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 828 bytes, Stack size 128 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[300]"></a>__kernel_cos</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[301]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[302]"></a>__kernel_sin</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[304]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
</UL>

<P><STRONG><a name="[305]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[306]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[307]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
</UL>

<P><STRONG><a name="[308]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
</UL>

<P><STRONG><a name="[303]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[de]"></a>__mathlib_narrow</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, narrow.o(i.__mathlib_narrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __mathlib_narrow &rArr; __mathlib_tofloat &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[309]"></a>__mathlib_tofloat</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, narrow.o(i.__mathlib_tofloat))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __mathlib_tofloat &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
</UL>

<P><STRONG><a name="[e2]"></a>__support_ldexp</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ldexp.o(i.__support_ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __support_ldexp &rArr; ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[b8]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[b0]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[30d]"></a>atan</STRONG> (Thumb, 474 bytes, Stack size 40 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[30e]"></a>atan2</STRONG> (Thumb, 346 bytes, Stack size 32 bytes, atan2.o(i.atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcj2bd
</UL>

<P><STRONG><a name="[30f]"></a>atof</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, atof.o(i.atof))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
</UL>

<P><STRONG><a name="[323]"></a>clust2sect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(i.clust2sect))
<BR><BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[314]"></a>cos</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs2gcj
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcj2bd
</UL>

<P><STRONG><a name="[264]"></a>delayms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcd.o(i.delayms))
<BR><BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Config
</UL>

<P><STRONG><a name="[31d]"></a>dir_sdi</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, ff.o(i.dir_sdi))
<BR><BR>[Stack]<UL><LI>Max Depth = 4344<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[32b]"></a>disk_initialize</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, diskio.o(i.disk_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = disk_initialize &rArr; W25QXX_Init &rArr; W25Qxx_Enable4ByteAddr &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[33b]"></a>disk_ioctl</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, diskio.o(i.disk_ioctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[32c]"></a>disk_read</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, diskio.o(i.disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = disk_read &rArr; W25QXX_Read &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[33f]"></a>disk_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, diskio.o(i.disk_status))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[32d]"></a>disk_write</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, diskio.o(i.disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 4248<LI>Call Chain = disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[225]"></a>exf_getfree</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, exfuns.o(i.exf_getfree))
<BR><BR>[Stack]<UL><LI>Max Depth = 4488<LI>Call Chain = exf_getfree &rArr; f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_FatFreePrcnt
</UL>

<P><STRONG><a name="[32f]"></a>exfuns_init</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, exfuns.o(i.exfuns_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = exfuns_init &rArr; mymalloc &rArr; my_mem_malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c2]"></a>fNumInputDialog</STRONG> (Thumb, 1310 bytes, Stack size 232 bytes, ui_dialog.o(i.fNumInputDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = fNumInputDialog &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowASC
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_DesignArea_Touch
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReaction
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero
</UL>

<P><STRONG><a name="[1e6]"></a>f_close</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ff.o(i.f_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 4328<LI>Call Chain = f_close &rArr; f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSourceDataFile
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSampFile
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowBMP
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileHead
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileData
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileList
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileHighLight
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlockFile
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveJGJFile
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updata_fontx
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_RDFILE_Answer
</UL>

<P><STRONG><a name="[2bf]"></a>f_closedir</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ff.o(i.f_closedir))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = f_closedir &rArr; validate
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_OnePageFiles
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_FileCount
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_FileIndex
</UL>

<P><STRONG><a name="[32e]"></a>f_getfree</STRONG> (Thumb, 258 bytes, Stack size 56 bytes, ff.o(i.f_getfree))
<BR><BR>[Stack]<UL><LI>Max Depth = 4448<LI>Call Chain = f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exf_getfree
</UL>

<P><STRONG><a name="[22f]"></a>f_lseek</STRONG> (Thumb, 684 bytes, Stack size 64 bytes, ff.o(i.f_lseek))
<BR><BR>[Stack]<UL><LI>Max Depth = 4416<LI>Call Chain = f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clmt_clust
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSampFile
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowBMP
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileData
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlockFile
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveJGJFile
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_RDFILE_Answer
</UL>

<P><STRONG><a name="[2b8]"></a>f_mkdir</STRONG> (Thumb, 354 bytes, Stack size 344 bytes, ff.o(i.f_mkdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 4800<LI>Call Chain = f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSourceDataFile
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
</UL>

<P><STRONG><a name="[339]"></a>f_mkfs</STRONG> (Thumb, 1578 bytes, Stack size 112 bytes, ff.o(i.f_mkfs))
<BR><BR>[Stack]<UL><LI>Max Depth = 4360<LI>Call Chain = f_mkfs &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
</UL>

<P><STRONG><a name="[33c]"></a>f_mount</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, ff.o(i.f_mount))
<BR><BR>[Stack]<UL><LI>Max Depth = 4432<LI>Call Chain = f_mount &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
</UL>

<P><STRONG><a name="[1e4]"></a>f_open</STRONG> (Thumb, 360 bytes, Stack size 352 bytes, ff.o(i.f_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 4808<LI>Call Chain = f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSourceDataFile
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSampFile
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowBMP
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_unioem
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_font
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileHead
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileData
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileList
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileHighLight
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlockFile
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveJGJFile
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updata_fontx
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_RDFILE_Answer
</UL>

<P><STRONG><a name="[22d]"></a>f_opendir</STRONG> (Thumb, 114 bytes, Stack size 296 bytes, ff.o(i.f_opendir))
<BR><BR>[Stack]<UL><LI>Max Depth = 4736<LI>Call Chain = f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_OnePageFiles
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_FileCount
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_FileIndex
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_DIR_Answer
</UL>

<P><STRONG><a name="[1e5]"></a>f_read</STRONG> (Thumb, 432 bytes, Stack size 64 bytes, ff.o(i.f_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 4384<LI>Call Chain = f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clmt_clust
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowBMP
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileHead
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileData
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileList
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileHighLight
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updata_fontx
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_RDFILE_Answer
</UL>

<P><STRONG><a name="[22e]"></a>f_readdir</STRONG> (Thumb, 96 bytes, Stack size 288 bytes, ff.o(i.f_readdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 4704<LI>Call Chain = f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_OnePageFiles
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_FileCount
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_FileIndex
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_DIR_Answer
</UL>

<P><STRONG><a name="[330]"></a>f_sync</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, ff.o(i.f_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 4312<LI>Call Chain = f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[1de]"></a>f_unlink</STRONG> (Thumb, 170 bytes, Stack size 368 bytes, ff.o(i.f_unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 4808<LI>Call Chain = f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_unioem
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_font
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteSelFile
</UL>

<P><STRONG><a name="[2b2]"></a>f_write</STRONG> (Thumb, 490 bytes, Stack size 64 bytes, ff.o(i.f_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 4416<LI>Call Chain = f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clmt_clust
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSourceDataFile
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSampFile
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlockFile
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveJGJFile
</UL>

<P><STRONG><a name="[319]"></a>ff_convert</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, cc936.o(i.ff_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ff_convert &rArr; W25QXX_Read &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[313]"></a>ff_wtoupper</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, cc936.o(i.ff_wtoupper))
<BR><BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>

<P><STRONG><a name="[340]"></a>font_init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, fontupd.o(i.font_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = font_init &rArr; W25QXX_Init &rArr; W25Qxx_Enable4ByteAddr &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30a]"></a>frexp</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, frexp.o(i.frexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = frexp
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[341]"></a>fupd_prog</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, fontupd.o(i.fupd_prog))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = fupd_prog &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNnNums
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_unioem
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_font
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updata_fontx
</UL>

<P><STRONG><a name="[343]"></a>gcj2bd</STRONG> (Thumb, 266 bytes, Stack size 96 bytes, gps.o(i.gcj2bd))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = gcj2bd &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs2bd
</UL>

<P><STRONG><a name="[316]"></a>get_fat</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, ff.o(i.get_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 4320<LI>Call Chain = get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[334]"></a>get_fattime</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, diskio.o(i.get_fattime))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = get_fattime &rArr; RX8010_ReadTime &rArr; RX8010_TimeRst &rArr; RX8010_SetTime &rArr; RX8010_WR_Reg &rArr; RX8010_IIC_Wait_Ack &rArr; RX8010_IIC_Stop &rArr; RX8010_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_ReadTime
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[346]"></a>get_matched_pymb</STRONG> (Thumb, 126 bytes, Stack size 36 bytes, pyinput.o(i.get_matched_pymb))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = get_matched_pymb &rArr; str_match
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_match
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pymb
</UL>

<P><STRONG><a name="[4]"></a>get_pymb</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, pyinput.o(i.get_pymb))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = get_pymb &rArr; get_matched_pymb &rArr; str_match
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_matched_pymb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pyinput.o(.data)
</UL>
<P><STRONG><a name="[123]"></a>iNumInputDialog</STRONG> (Thumb, 1300 bytes, Stack size 216 bytes, ui_dialog.o(i.iNumInputDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = iNumInputDialog &rArr; ClearTouchSta &rArr; ui_ButtonTask &rArr; Get_Touch_Res &rArr; Touch_Scan &rArr; TP_Scan &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowASC
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_DesignArea_Touch
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouchSta
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReaction
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetFun
</UL>

<P><STRONG><a name="[30c]"></a>ldexp</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, ldexp.o(i.ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
</UL>

<P><STRONG><a name="[348]"></a>log</STRONG> (Thumb, 808 bytes, Stack size 96 bytes, log.o(i.log))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = log &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10
</UL>

<P><STRONG><a name="[2ec]"></a>log10</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, log10.o(i.log10))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = log10 &rArr; log &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
</UL>

<P><STRONG><a name="[ab]"></a>main</STRONG> (Thumb, 296 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 4800 + Unknown Stack Size
<LI>Call Chain = main &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unioem_init
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_mem_init
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_init
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exfuns_init
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UiSchedule
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UiInit
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Memery_Init_AK
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Int_Init
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Int_Init
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBkLedPercent
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_FileIndex
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RX8010_Init
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Init
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Beep_Init
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSysPara
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT6336_Init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Init
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BkLed_Init
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BkLedPWM_Init
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_Adc_Init
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[34f]"></a>my_mem_free</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, malloc.o(i.my_mem_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = my_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myfree
</UL>

<P><STRONG><a name="[5]"></a>my_mem_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, malloc.o(i.my_mem_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = my_mem_init &rArr; mymemset
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymemset
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> malloc.o(.data)
</UL>
<P><STRONG><a name="[350]"></a>my_mem_malloc</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, malloc.o(i.my_mem_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = my_mem_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymalloc
</UL>

<P><STRONG><a name="[6]"></a>my_mem_perused</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, malloc.o(i.my_mem_perused))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = my_mem_perused
</UL>
<BR>[Address Reference Count : 1]<UL><LI> malloc.o(.data)
</UL>
<P><STRONG><a name="[166]"></a>myfree</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, malloc.o(i.myfree))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = myfree &rArr; my_mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowBMP
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReactionXY
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReaction
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_unioem
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_font
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectFileOpt
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteSelLink
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteSelFile
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Fun
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Fun
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updata_fontx
</UL>

<P><STRONG><a name="[1c7]"></a>mymalloc</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, malloc.o(i.mymalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mymalloc &rArr; my_mem_malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_mem_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exfuns_init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowBMP
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRect
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_unioem
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_font
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectFileOpt
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateSelLink
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updata_fontx
</UL>

<P><STRONG><a name="[34e]"></a>mymemset</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, malloc.o(i.mymemset))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mymemset
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_mem_init
</UL>

<P><STRONG><a name="[351]"></a>outOfChina</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gps.o(i.outOfChina))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = outOfChina &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs2gcj
</UL>

<P><STRONG><a name="[317]"></a>put_fat</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, ff.o(i.put_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 4320<LI>Call Chain = put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[266]"></a>read_data</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd.o(i.read_data))
<BR><BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadPoint
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRect
</UL>

<P><STRONG><a name="[344]"></a>sin</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs2gcj
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLon
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLat
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcj2bd
</UL>

<P><STRONG><a name="[345]"></a>sqrt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs2gcj
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLon
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLat
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcj2bd
</UL>

<P><STRONG><a name="[347]"></a>str_match</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, pyinput.o(i.str_match))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = str_match
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_matched_pymb
</UL>

<P><STRONG><a name="[354]"></a>transformLat</STRONG> (Thumb, 624 bytes, Stack size 104 bytes, gps.o(i.transformLat))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = transformLat &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs2gcj
</UL>

<P><STRONG><a name="[355]"></a>transformLon</STRONG> (Thumb, 616 bytes, Stack size 96 bytes, gps.o(i.transformLon))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = transformLon &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs2gcj
</UL>

<P><STRONG><a name="[122]"></a>ui_AllButtonReaction</STRONG> (Thumb, 598 bytes, Stack size 56 bytes, kongjian.o(i.ui_AllButtonReaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ui_AllButtonReaction &rArr; LCD_ReadRect &rArr; mymalloc &rArr; my_mem_malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadPoint
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myfree
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPicture
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRect
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetFun
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_Run
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_Run
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_Run
</UL>

<P><STRONG><a name="[89]"></a>ui_Analyze_InitDisp</STRONG> (Thumb, 900 bytes, Stack size 184 bytes, ui_analyze.o(i.ui_Analyze_InitDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 10144 + Unknown Stack Size
<LI>Call Chain = ui_Analyze_InitDisp &rArr; BrushHeatMap &rArr; ColorConverter2 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSaveDataCnt
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChannelLine
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushTiaoXingPage
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushHeatMap
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCurvePage
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushChannelSel
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouchSta
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_Run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>ui_Analyze_Run</STRONG> (Thumb, 1190 bytes, Stack size 24 bytes, ui_analyze.o(i.ui_Analyze_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 10168 + Unknown Stack Size
<LI>Call Chain = ui_Analyze_Run &rArr; ui_Analyze_InitDisp &rArr; BrushHeatMap &rArr; ColorConverter2 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChannelLine
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteChannelLine
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTiaoxingPage
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushTiaoXingPage
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushHeatMap
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCurvePage
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushChannelSel
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataView_Fun
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_DragChannel
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_InitDisp
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[8f]"></a>ui_Biaoding_InitDisp</STRONG> (Thumb, 654 bytes, Stack size 176 bytes, ui_biaoding.o(i.ui_Biaoding_InitDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = ui_Biaoding_InitDisp &rArr; ui_DispTitleBar &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZBiaoDing
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_Run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>ui_Biaoding_Run</STRONG> (Thumb, 622 bytes, Stack size 24 bytes, ui_biaoding.o(i.ui_Biaoding_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = ui_Biaoding_Run &rArr; ui_Biaoding_InitDisp &rArr; ui_DispTitleBar &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Biaoding_Fun
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_InitDisp
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>ui_Browse10_InitDisp</STRONG> (Thumb, 562 bytes, Stack size 336 bytes, ui_browse10.o(i.ui_Browse10_InitDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 5328 + Unknown Stack Size
<LI>Call Chain = ui_Browse10_InitDisp &rArr; Scan_OnePageFiles &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_OnePageFiles
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_FileIndex
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispScrollBar
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouchSta
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileList
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateSelLink
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>ui_Browse10_Run</STRONG> (Thumb, 3024 bytes, Stack size 72 bytes, ui_browse10.o(i.ui_Browse10_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 5400 + Unknown Stack Size
<LI>Call Chain = ui_Browse10_Run &rArr; ui_Browse10_InitDisp &rArr; Scan_OnePageFiles &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_OnePageFiles
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_FileIndex
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispScrollBar
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_BatPrcnt
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_InitDisp
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectFileRefresh
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectFileOpt
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileHead
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileData
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewFun
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileList
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFileHighLight
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteSelLink
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteSelFile
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateSelLink
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Fun
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[172]"></a>ui_BrushMenuOneBtn</STRONG> (Thumb, 316 bytes, Stack size 88 bytes, ui_public.o(i.ui_BrushMenuOneBtn))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = ui_BrushMenuOneBtn &rArr; LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
</UL>

<P><STRONG><a name="[f7]"></a>ui_ButtonTask</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, kongjian.o(i.ui_ButtonTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = ui_ButtonTask &rArr; Get_Touch_Res &rArr; Touch_Scan &rArr; TP_Scan &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBkLedPercent
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffCnt_Reset
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Touch_Res
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKLedOffCnt_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Biaoding_Fun
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiFun
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZBiaoDing
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetFun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataView_Fun
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Fun
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouchSta
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeSetDialog
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectDialog
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_View_Run
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Start_Run
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_Run
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_Run
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_Run
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_Run
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_Run
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewFun
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataOrig
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Fun
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockDataViewBro_Fun
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataView_Fun
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Fun
</UL>

<P><STRONG><a name="[8d]"></a>ui_Condition_InitDisp</STRONG> (Thumb, 414 bytes, Stack size 216 bytes, ui_condition.o(i.ui_Condition_InitDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = ui_Condition_InitDisp &rArr; ui_DispTitleBar &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>ui_Condition_Run</STRONG> (Thumb, 1094 bytes, Stack size 32 bytes, ui_condition.o(i.ui_Condition_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 744 + Unknown Stack Size
<LI>Call Chain = ui_Condition_Run &rArr; FanXiangXZSetFun &rArr; FXXZQuZhiFun &rArr; FXXZBiaoDing &rArr; ui_Biaoding_InitDisp &rArr; ui_DispTitleBar &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetFun
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[359]"></a>ui_DispBattery</STRONG> (Thumb, 2264 bytes, Stack size 56 bytes, ui_public.o(i.ui_DispBattery))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = ui_DispBattery &rArr; Get_Bat_Quantity &rArr; Get_Bat_Voltage &rArr; ADC_Filter &rArr; Get_ADC_Value &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadPoint
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Quantity
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChargeStep
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChargeSta
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwrOffFunc
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_InitDisp
</UL>

<P><STRONG><a name="[35b]"></a>ui_DispBluetooth</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, ui_public.o(i.ui_DispBluetooth))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = ui_DispBluetooth &rArr; LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadPoint
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetLinkSta
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
</UL>

<P><STRONG><a name="[35c]"></a>ui_DispDate</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, ui_public.o(i.ui_DispDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = ui_DispDate &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadPoint
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_InitDisp
</UL>

<P><STRONG><a name="[163]"></a>ui_DispGJName</STRONG> (Thumb, 66 bytes, Stack size 48 bytes, ui_public.o(i.ui_DispGJName))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = ui_DispGJName &rArr; Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadPoint
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Text
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNameShort
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataView_Fun
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaOptions
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_InitDisp
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_InitDisp
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_InitDisp
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewInit
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockDataViewBro_Fun
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataView_Fun
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Init
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
</UL>

<P><STRONG><a name="[35d]"></a>ui_DispGPSIcon</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, ui_public.o(i.ui_DispGPSIcon))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = ui_DispGPSIcon &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadPoint
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_InitDisp
</UL>

<P><STRONG><a name="[f4]"></a>ui_DispMenuBtn</STRONG> (Thumb, 534 bytes, Stack size 96 bytes, ui_public.o(i.ui_DispMenuBtn))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = ui_DispMenuBtn &rArr; LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetInit
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiInit
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZBiaoDing
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataView_Fun
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaSet_Init
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_InitDisp
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_InitDisp
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_InitDisp
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_InitDisp
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_InitDisp
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_InitDisp
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_InitDisp
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaSet_Init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewInit
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataOrig
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockDataViewBro_Fun
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataView_Fun
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Init
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
</UL>

<P><STRONG><a name="[35e]"></a>ui_DispTempera</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, ui_public.o(i.ui_DispTempera))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = ui_DispTempera &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadPoint
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
</UL>

<P><STRONG><a name="[35f]"></a>ui_DispTime</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, ui_public.o(i.ui_DispTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = ui_DispTime &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadPoint
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_InitDisp
</UL>

<P><STRONG><a name="[162]"></a>ui_DispTitleBar</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, ui_public.o(i.ui_DispTitleBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = ui_DispTitleBar &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText_Center
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetInit
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZBiaoDing
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataView_Fun
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaSet_Init
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Init
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Fun
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_InitDisp
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_Run
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_InitDisp
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_InitDisp
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaSet_Init
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOpt
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockDataViewBro_Fun
</UL>

<P><STRONG><a name="[91]"></a>ui_Gain_InitDisp</STRONG> (Thumb, 990 bytes, Stack size 216 bytes, ui_gain.o(i.ui_Gain_InitDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 10176 + Unknown Stack Size
<LI>Call Chain = ui_Gain_InitDisp &rArr; BrushHeatMap &rArr; ColorConverter2 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSaveDataCnt
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChannelLine
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushTiaoXingPage
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushHeatMap
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushChannelSel
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_Run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>ui_Gain_Run</STRONG> (Thumb, 694 bytes, Stack size 24 bytes, ui_gain.o(i.ui_Gain_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 10200 + Unknown Stack Size
<LI>Call Chain = ui_Gain_Run &rArr; ui_Gain_InitDisp &rArr; BrushHeatMap &rArr; ColorConverter2 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChannelLine
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteChannelLine
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushTiaoXingPage
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushChannelSel
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataView_Fun
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_DragChannel
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Beep_On
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReaction
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_InitDisp
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[360]"></a>ui_GetTempera</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ui_public.o(i.ui_GetTempera))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ui_GetTempera &rArr; CT1711_Get_Temp &rArr; CT1711_Temp_Degree &rArr; SWire_Read_Byte &rArr; SWire_Read_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Get_Temp
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
</UL>

<P><STRONG><a name="[93]"></a>ui_Heat_InitDisp</STRONG> (Thumb, 1106 bytes, Stack size 280 bytes, ui_heat.o(i.ui_Heat_InitDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 10240 + Unknown Stack Size
<LI>Call Chain = ui_Heat_InitDisp &rArr; BrushHeatMap &rArr; ColorConverter2 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSaveDataCnt
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChannelLine
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushTiaoXingPage
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushHeatMap
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushChannelSel
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_Run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>ui_Heat_Run</STRONG> (Thumb, 894 bytes, Stack size 48 bytes, ui_heat.o(i.ui_Heat_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 10288 + Unknown Stack Size
<LI>Call Chain = ui_Heat_Run &rArr; ui_Heat_InitDisp &rArr; BrushHeatMap &rArr; ColorConverter2 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChannelLine
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteChannelLine
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushTiaoXingPage
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushHeatMap
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushChannelSel
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataView_Fun
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_DragChannel
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_InitDisp
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[f6]"></a>ui_KeyTask</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, kongjian.o(i.ui_KeyTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ui_KeyTask &rArr; SetBkLedPercent
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBkLedPercent
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwrOffFunc
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffCnt_Reset
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKLedOffCnt_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Biaoding_Fun
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanXiangXZSetFun
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZQuZhiFun
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FXXZBiaoDing
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoTuMianSetFun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataView_Fun
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Fun
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeSetDialog
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectDialog
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_View_Run
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Start_Run
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Paraset10_Run
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Main_Run
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Heat_Run
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_Run
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Condition_Run
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Browse10_Run
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Biaoding_Run
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Analyze_Run
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataViewFun
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJDataOrig
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreviewBro_Fun
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockDataViewBro_Fun
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataView_Fun
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Fun
</UL>

<P><STRONG><a name="[79]"></a>ui_Main_InitDisp</STRONG> (Thumb, 554 bytes, Stack size 112 bytes, ui_main.o(i.ui_Main_InitDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = ui_Main_InitDisp &rArr; ui_DispBattery &rArr; Get_Bat_Quantity &rArr; Get_Bat_Voltage &rArr; ADC_Filter &rArr; Get_ADC_Value &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText_Center
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTime
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGPSIcon
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispDate
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBattery
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPicture
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[7a]"></a>ui_Main_Run</STRONG> (Thumb, 3646 bytes, Stack size 72 bytes, ui_main.o(i.ui_Main_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = ui_Main_Run &rArr; GPS_Location_Data &rArr; wgs2bd &rArr; wgs2gcj &rArr; transformLat &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Ctrl
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText_Center
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Data
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_ManualStart
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Location_Data
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Lookup
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Water_Light
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Beep_On
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_GetTempera
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTime
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTempera
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGPSIcon
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBluetooth
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBattery
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPicture
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[233]"></a>ui_OneButtonReaction</STRONG> (Thumb, 562 bytes, Stack size 48 bytes, kongjian.o(i.ui_OneButtonReaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ui_OneButtonReaction &rArr; LCD_ReadRect &rArr; mymalloc &rArr; my_mem_malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadPoint
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myfree
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPicture
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRect
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Fun
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNumInputDialog
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeSetDialog
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampset_Run
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Gain_Run
</UL>

<P><STRONG><a name="[1c1]"></a>ui_OneButtonReactionXY</STRONG> (Thumb, 360 bytes, Stack size 56 bytes, kongjian.o(i.ui_OneButtonReactionXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ui_OneButtonReactionXY &rArr; LCD_ReadRect &rArr; mymalloc &rArr; my_mem_malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadPoint
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myfree
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPicture
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero
</UL>

<P><STRONG><a name="[85]"></a>ui_Paraset10_InitDisp</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ui_paraset10.o(i.ui_Paraset10_InitDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = ui_Paraset10_InitDisp &rArr; SysParaSet_Init &rArr; BrushPageInit &rArr; DoubleButtonDisp &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaSet_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>ui_Paraset10_Run</STRONG> (Thumb, 726 bytes, Stack size 40 bytes, ui_paraset10.o(i.ui_Paraset10_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 5000 + Unknown Stack Size
<LI>Call Chain = ui_Paraset10_Run &rArr; SysParaOpt &rArr; update_unioem &rArr; updata_fontx &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBkLedPercent
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSysPara
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispScrollBar
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_DragChannel
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Lookup
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_BatPrcnt
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaSet_Init
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOptRes
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOpt
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPageInit
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKLightDisp
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;About_Fun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>ui_SampBlock_InitDisp</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, ui_sampblock.o(i.ui_SampBlock_InitDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 4528 + Unknown Stack Size
<LI>Call Chain = ui_SampBlock_InitDisp &rArr; Get_FatFreePrcnt &rArr; exf_getfree &rArr; f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearCarDist
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_FatFreePrcnt
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>ui_SampBlock_Run</STRONG> (Thumb, 3646 bytes, Stack size 200 bytes, ui_sampblock.o(i.ui_SampBlock_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = ui_SampBlock_Run &rArr; SaveBlockFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Data
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearCarDist
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptTone_Once
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Lookup
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SetGJNameNext
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_GetTempera
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBattery
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_BrushMenuOneBtn
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_BatPrcnt
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_Block
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlockFile
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlockData
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsViewAbleFun
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlockDataDirInfo
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlockDataCnt
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCarTrackCur
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBlockDist
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlockDataOne
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCarTrackOne
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCarTrackAll
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCarNumDisp
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockSample_Init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPreview_Fun
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[7d]"></a>ui_SampJGJ_InitDisp</STRONG> (Thumb, 198 bytes, Stack size 8 bytes, ui_sampjgj.o(i.ui_SampJGJ_InitDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 4528 + Unknown Stack Size
<LI>Call Chain = ui_SampJGJ_InitDisp &rArr; Get_FatFreePrcnt &rArr; exf_getfree &rArr; f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_FatFreePrcnt
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>ui_SampJGJ_Run</STRONG> (Thumb, 2010 bytes, Stack size 48 bytes, ui_sampjgj.o(i.ui_SampJGJ_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 4904 + Unknown Stack Size
<LI>Call Chain = ui_SampJGJ_Run &rArr; SaveJGJFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Data
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSaveDataCnt
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Lookup
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SetGJNameNext
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_GetTempera
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBattery
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_BrushMenuOneBtn
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_BatPrcnt
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_DesignArea_Slide
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_JGJ
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteJGJCurDot
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetJGJHegeCnt
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveJGJFile
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleJGJ_Init
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJGJSaveCnt
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearJGJBuf
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJSketch
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJRebar
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushJGJDot
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>ui_Sampdisp_InitDisp</STRONG> (Thumb, 532 bytes, Stack size 192 bytes, ui_sampdisp.o(i.ui_Sampdisp_InitDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = ui_Sampdisp_InitDisp &rArr; ui_DispTitleBar &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_Run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[8c]"></a>ui_Sampdisp_Run</STRONG> (Thumb, 1784 bytes, Stack size 24 bytes, ui_sampdisp.o(i.ui_Sampdisp_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = ui_Sampdisp_Run &rArr; ui_Sampdisp_InitDisp &rArr; ui_DispTitleBar &rArr; LCD_ShowText_Center &rArr; LCD_ShowText &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataView_Fun
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sampdisp_InitDisp
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>ui_Sample10_InitDisp</STRONG> (Thumb, 722 bytes, Stack size 224 bytes, ui_sample10.o(i.ui_Sample10_InitDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 4744 + Unknown Stack Size
<LI>Call Chain = ui_Sample10_InitDisp &rArr; Get_FatFreePrcnt &rArr; exf_getfree &rArr; f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSaveDataCnt
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChannelLine
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushZXX
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushTiaoXingPage
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushMZJ
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCurvePage
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushChannelSel
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouchSta
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_FatFreePrcnt
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[7c]"></a>ui_Sample10_Run</STRONG> (Thumb, 2200 bytes, Stack size 48 bytes, ui_sample10.o(i.ui_Sample10_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 4984 + Unknown Stack Size
<LI>Call Chain = ui_Sample10_Run &rArr; SaveSampFile &rArr; BT_RealSendFile &rArr; HC_RDFILE_Answer &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDotData
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Data
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChannelLine
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCarDist
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteChannelLine
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTiaoxingPage
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearCurvePage
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearCarDist
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushTiaoXingPage
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCurvePage
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushChannelSel
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCar
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSourceDataFile
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptTone_Once
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAimPara
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_DragChannel
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRebarCnt
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_MZK
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimFuncRun_HD
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSampFile
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSampDataCnt
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Lookup
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SetGJNameNext
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_GetTempera
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBattery
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_BatPrcnt
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_InitDisp
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>ui_Sampset_InitDisp</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ui_sampset.o(i.ui_Sampset_InitDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = ui_Sampset_InitDisp &rArr; SampParaSet_Init &rArr; SampParaOptions &rArr; ui_DispGJName &rArr; Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaSet_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>ui_Sampset_Run</STRONG> (Thumb, 752 bytes, Stack size 40 bytes, ui_sampset.o(i.ui_Sampset_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 576 + Unknown Stack Size
<LI>Call Chain = ui_Sampset_Run &rArr; HighParaSet_Fun &rArr; HighParaSet_Init &rArr; SampParaOptions &rArr; ui_DispGJName &rArr; Show_Text &rArr; LCD_ShowZimo &rArr; LCD_ShowZimo_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaSet_Init
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampParaOptions
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighParaSet_Fun
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispScrollBar
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Beep_On
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectDialog
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumSetDialog
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTitleBar
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_OneButtonReaction
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaTableDefault
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[365]"></a>ui_SetGJNameNext</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, ui_public.o(i.ui_SetGJNameNext))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = ui_SetGJNameNext &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Sample10_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
</UL>

<P><STRONG><a name="[77]"></a>ui_Start_InitDisp</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, ui_start.o(i.ui_Start_InitDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = ui_Start_InitDisp &rArr; ClearTouchSta &rArr; ui_ButtonTask &rArr; Get_Touch_Res &rArr; Touch_Scan &rArr; TP_Scan &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouchSta
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPicture
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[78]"></a>ui_Start_Run</STRONG> (Thumb, 382 bytes, Stack size 24 bytes, ui_start.o(i.ui_Start_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = ui_Start_Run &rArr; ui_ButtonTask &rArr; Get_Touch_Res &rArr; Touch_Scan &rArr; TP_Scan &rArr; LCD_ShowNnNums &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Ctrl
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>ui_Verify_InitDisp</STRONG> (Thumb, 464 bytes, Stack size 152 bytes, ui_verify.o(i.ui_Verify_InitDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = ui_Verify_InitDisp &rArr; BrushCurvePage &rArr; BrushPouMianPage &rArr; LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSaveDataCnt
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushZXX
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushMZJ
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCurvePage
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushChannelSel
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouchSta
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispMenuBtn
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispGJName
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>ui_Verify_Run</STRONG> (Thumb, 1648 bytes, Stack size 48 bytes, ui_verify.o(i.ui_Verify_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 4984 + Unknown Stack Size
<LI>Call Chain = ui_Verify_Run &rArr; SaveSampFile &rArr; BT_RealSendFile &rArr; HC_RDFILE_Answer &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysPara
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Data
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCarDist
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCurveOne
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCurvePage
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushChannelSel
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushCar
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_DragChannel
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSampFile
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSampDataCnt
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNums
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SetGJNameNext
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_GetTempera
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispBattery
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_BatPrcnt
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_AllButtonReaction
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_InitDisp
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>ui_View_InitDisp</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, ui_view.o(i.ui_View_InitDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 4928 + Unknown Stack Size
<LI>Call Chain = ui_View_InitDisp &rArr; LCD_ShowBMP &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_FileCount
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowBMP
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>ui_View_Run</STRONG> (Thumb, 816 bytes, Stack size 8 bytes, ui_view.o(i.ui_View_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 4928 + Unknown Stack Size
<LI>Call Chain = ui_View_Run &rArr; LCD_ShowBMP &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Beep_On
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowBMP
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_KeyTask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ButtonTask
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendUiNo
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> config_ui.o(.constdata)
</UL>
<P><STRONG><a name="[34b]"></a>unioem_init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, fontupd.o(i.unioem_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = unioem_init &rArr; W25QXX_Init &rArr; W25Qxx_Enable4ByteAddr &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[369]"></a>updata_fontx</STRONG> (Thumb, 318 bytes, Stack size 64 bytes, fontupd.o(i.updata_fontx))
<BR><BR>[Stack]<UL><LI>Max Depth = 4872 + Unknown Stack Size
<LI>Call Chain = updata_fontx &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myfree
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymalloc
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fupd_prog
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_unioem
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_font
</UL>

<P><STRONG><a name="[2cf]"></a>update_font</STRONG> (Thumb, 790 bytes, Stack size 56 bytes, fontupd.o(i.update_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 4928 + Unknown Stack Size
<LI>Call Chain = update_font &rArr; updata_fontx &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myfree
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymalloc
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updata_fontx
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fupd_prog
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOpt
</UL>

<P><STRONG><a name="[2d0]"></a>update_unioem</STRONG> (Thumb, 718 bytes, Stack size 56 bytes, fontupd.o(i.update_unioem))
<BR><BR>[Stack]<UL><LI>Max Depth = 4928 + Unknown Stack Size
<LI>Call Chain = update_unioem &rArr; updata_fontx &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_ms
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myfree
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymalloc
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updata_fontx
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fupd_prog
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParaOpt
</UL>

<P><STRONG><a name="[212]"></a>wgs2bd</STRONG> (Thumb, 72 bytes, Stack size 56 bytes, gps.o(i.wgs2bd))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = wgs2bd &rArr; wgs2gcj &rArr; transformLat &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs2gcj
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcj2bd
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Location_Data
</UL>

<P><STRONG><a name="[36b]"></a>wgs2gcj</STRONG> (Thumb, 444 bytes, Stack size 112 bytes, gps.o(i.wgs2gcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = wgs2gcj &rArr; transformLat &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLon
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLat
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outOfChina
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs2bd
</UL>

<P><STRONG><a name="[25d]"></a>write_cmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.write_cmd))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReadArea
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDispArea
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Config
</UL>

<P><STRONG><a name="[25e]"></a>write_data</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd.o(i.write_data))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowBMP
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowASC
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPicture
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReadArea
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDispArea
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Config
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowZimo_BK
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNum
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowCh
</UL>

<P><STRONG><a name="[a5]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[64]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[2ef]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[36d]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[208]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Location_Data
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindCoverTab_Sum
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindCoverTab_Sub
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLineDotted
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs2gcj
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLon
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLat
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcj2bd
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[370]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[373]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[377]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[206]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindCoverTab_Sum
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindCoverTab_Sub
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs2gcj
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLon
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLat
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_DataParsing
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[375]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[30b]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
</UL>

<P><STRONG><a name="[376]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[20a]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindCoverTab_Sum
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindCoverTab_Sub
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[378]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[25c]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLineDotted
</UL>

<P><STRONG><a name="[379]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[207]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Location_Data
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindCoverTab_Sum
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindCoverTab_Sub
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
</UL>

<P><STRONG><a name="[3ca]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[205]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindCoverTab_Sum
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindCoverTab_Sub
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_DataParsing
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[3cb]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[352]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outOfChina
</UL>

<P><STRONG><a name="[37a]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[37d]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[209]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindCoverTab_Sum
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindCoverTab_Sub
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs2gcj
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLon
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLat
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcj2bd
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[37b]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[36f]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[372]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[1c4]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outOfChina
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[37c]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[2ee]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs2gcj
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[37e]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[353]"></a>_dsqrt</STRONG> (Thumb, 456 bytes, Stack size 24 bytes, dsqrt_noumaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[2ed]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs2gcj
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[380]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[1c3]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fNumInputDialog
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptDialog
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_DispTempera
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLineDotted
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_TEMP_Answer
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_SYSPARA_Answer
</UL>

<P><STRONG><a name="[381]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[1b5]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispScrollBar
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLineDotted
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJPreView
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteJGJCurDot
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsRebarHege
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispJGJData
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Percent
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Temp_Degree
</UL>

<P><STRONG><a name="[383]"></a>_fadd</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[387]"></a>__fpl_fcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fcmpi.o(x$fpl$fcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
</UL>

<P><STRONG><a name="[179]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePouMian
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBoXing
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorConverter2
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorConverter
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMianPage
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMian
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushHeatMap
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXingPage
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXing
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispScrollBar
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_FatFreePrcnt
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLineDotted
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJPreView
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBlockRebar
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteJGJCurDot
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsRebarHege
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispJGJData
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Voltage
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Percent
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Temp_Degree
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fupd_prog
</UL>

<P><STRONG><a name="[385]"></a>_fdiv</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[342]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, feqf.o(x$fpl$feqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cfcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fupd_prog
</UL>

<P><STRONG><a name="[386]"></a>_fcmpeq</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, feqf.o(x$fpl$feqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
</UL>

<P><STRONG><a name="[17f]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CarJourney
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePouMian
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBoXing
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMianPage
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMian
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushHeatMap
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXingPage
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXing
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispScrollBar
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Voltage
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Percent
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Temp_Degree
</UL>

<P><STRONG><a name="[388]"></a>_ffix</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[17b]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorConverter2
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorConverter
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispScrollBar
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_FatFreePrcnt
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLineDotted
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJPreView
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBlockRebar
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteJGJCurDot
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsRebarHege
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispJGJData
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fupd_prog
</UL>

<P><STRONG><a name="[389]"></a>_ffixu</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[17e]"></a>__aeabi_i2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CarJourney
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorConverter2
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorConverter
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMian
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushHeatMap
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXing
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispScrollBar
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLineDotted
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJPreView
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteJGJCurDot
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsRebarHege
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Voltage
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Percent
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Temp_Degree
</UL>

<P><STRONG><a name="[3cc]"></a>_fflt</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[178]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePouMian
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBoXing
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorConverter2
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorConverter
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMianPage
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXingPage
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispScrollBar
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_FatFreePrcnt
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLineDotted
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJPreView
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBlockRebar
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispJGJData
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Temp_Degree
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fupd_prog
</UL>

<P><STRONG><a name="[3cd]"></a>_ffltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)

<P><STRONG><a name="[1b6]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLineDotted
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Percent
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Temp_Degree
</UL>

<P><STRONG><a name="[38a]"></a>_fcmple</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
</UL>

<P><STRONG><a name="[38d]"></a>__fpl_fcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
</UL>

<P><STRONG><a name="[17a]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CarJourney
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePouMian
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBoXing
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorConverter2
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorConverter
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMianPage
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushPouMian
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushHeatMap
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXingPage
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBoXing
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispScrollBar
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_FatFreePrcnt
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFiZero
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJPreView
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushBlockRebar
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Voltage
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Percent
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Temp_Degree
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fupd_prog
</UL>

<P><STRONG><a name="[38b]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[382]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[36e]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[1b7]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Percent
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT1711_Temp_Degree
</UL>

<P><STRONG><a name="[38c]"></a>_frcmple</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmple_InfNaN
</UL>

<P><STRONG><a name="[223]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMZK
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_Verify_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampJGJ_Run
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_SampBlock_Run
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JGJPreView
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bat_Percent
</UL>

<P><STRONG><a name="[38e]"></a>_fsub</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[9c]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[374]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[2ff]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[d1]"></a>_scanf_real</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf1.o(x$fpl$scanf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>

<P><STRONG><a name="[dd]"></a>_scanf_hex_real</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf2.o(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[dc]"></a>_scanf_infnan</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf2.o(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _scanf_infnan &rArr; _scanf_really_infnan
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[390]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[191]"></a>BrushKeyBoard</STRONG> (Thumb, 916 bytes, Stack size 40 bytes, ui_dialog.o(i.BrushKeyBoard))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = BrushKeyBoard &rArr; LCD_ShowChinese &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowASC
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextSetDialog
</UL>

<P><STRONG><a name="[21b]"></a>GetSourceData</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, aimlib.o(i.GetSourceData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetSourceData &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAdcDataBuf
</UL>

<P><STRONG><a name="[269]"></a>LCD_ShowCh</STRONG> (Thumb, 318 bytes, Stack size 60 bytes, lcd.o(i.LCD_ShowCh))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_ShowCh &rArr; SetDispArea
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDispArea
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
</UL>

<P><STRONG><a name="[26a]"></a>LCD_ShowCh_NBK</STRONG> (Thumb, 280 bytes, Stack size 64 bytes, lcd.o(i.LCD_ShowCh_NBK))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_ShowCh_NBK &rArr; LCD_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChinese
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowText
</UL>

<P><STRONG><a name="[2c7]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo48
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo48
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[2c8]"></a>SetSysClockTo48</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo48))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo48
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[310]"></a>check_fs</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, ff.o(i.check_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 4304<LI>Call Chain = check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[31a]"></a>chk_chr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ff.o(i.chk_chr))
<BR><BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[333]"></a>clmt_clust</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ff.o(i.clmt_clust))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = clmt_clust
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>

<P><STRONG><a name="[312]"></a>cmp_lfn</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, ff.o(i.cmp_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cmp_lfn
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[315]"></a>create_chain</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, ff.o(i.create_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 4352<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[318]"></a>create_name</STRONG> (Thumb, 604 bytes, Stack size 56 bytes, ff.o(i.create_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = create_name &rArr; ff_convert &rArr; W25QXX_Read &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[31c]"></a>dir_alloc</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, ff.o(i.dir_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 4400<LI>Call Chain = dir_alloc &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[31f]"></a>dir_find</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, ff.o(i.dir_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 4408<LI>Call Chain = dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[31e]"></a>dir_next</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, ff.o(i.dir_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 4376<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[324]"></a>dir_read</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, ff.o(i.dir_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 4416<LI>Call Chain = dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pick_lfn
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[326]"></a>dir_register</STRONG> (Thumb, 298 bytes, Stack size 48 bytes, ff.o(i.dir_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 4456<LI>Call Chain = dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_lfn
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[32a]"></a>dir_remove</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, ff.o(i.dir_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 4392<LI>Call Chain = dir_remove &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
</UL>

<P><STRONG><a name="[332]"></a>find_volume</STRONG> (Thumb, 900 bytes, Stack size 88 bytes, ff.o(i.find_volume))
<BR><BR>[Stack]<UL><LI>Max Depth = 4392<LI>Call Chain = find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>

<P><STRONG><a name="[329]"></a>fit_lfn</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, ff.o(i.fit_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fit_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[335]"></a>follow_path</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, ff.o(i.follow_path))
<BR><BR>[Stack]<UL><LI>Max Depth = 4440<LI>Call Chain = follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[328]"></a>gen_numname</STRONG> (Thumb, 198 bytes, Stack size 64 bytes, ff.o(i.gen_numname))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gen_numname &rArr; mem_cpy
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[33e]"></a>get_fileinfo</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, ff.o(i.get_fileinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = get_fileinfo &rArr; ff_convert &rArr; W25QXX_Read &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[33a]"></a>get_ldnumber</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, ff.o(i.get_ldnumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_ldnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[33d]"></a>ld_clust</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ff.o(i.ld_clust))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ld_clust
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[321]"></a>mem_cmp</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, ff.o(i.mem_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[327]"></a>mem_cpy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ff.o(i.mem_cpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[31b]"></a>mem_set</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, ff.o(i.mem_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[311]"></a>move_window</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ff.o(i.move_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 4288<LI>Call Chain = move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[325]"></a>pick_lfn</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, ff.o(i.pick_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pick_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>

<P><STRONG><a name="[337]"></a>remove_chain</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ff.o(i.remove_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 4344<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[336]"></a>st_clust</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(i.st_clust))
<BR><BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[320]"></a>sum_sfn</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, ff.o(i.sum_sfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sum_sfn
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[338]"></a>sync_fs</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, ff.o(i.sync_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 4288<LI>Call Chain = sync_fs &rArr; sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[322]"></a>sync_window</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, ff.o(i.sync_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 4272<LI>Call Chain = sync_window &rArr; disk_write &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[331]"></a>validate</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ff.o(i.validate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = validate
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[1ce]"></a>DataStageIn</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, usb_core.o(i.DataStageIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserToPMABufferCopy
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPTxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Setup0
</UL>

<P><STRONG><a name="[1d2]"></a>DataStageOut</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, usb_core.o(i.DataStageOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DataStageOut &rArr; PMAToUserBufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMAToUserBufferCopy
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPRxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
</UL>

<P><STRONG><a name="[1d5]"></a>Data_Setup0</STRONG> (Thumb, 628 bytes, Stack size 40 bytes, usb_core.o(i.Data_Setup0))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>

<P><STRONG><a name="[282]"></a>NoData_Setup0</STRONG> (Thumb, 290 bytes, Stack size 16 bytes, usb_core.o(i.NoData_Setup0))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = NoData_Setup0 &rArr; Standard_ClearFeature &rArr; SetEPTxStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetInterface
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetEndPointFeature
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetDeviceFeature
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetConfiguration
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>

<P><STRONG><a name="[229]"></a>IntToUnicode</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, hw_config.o(i.IntToUnicode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IntToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SerialNum
</UL>

<P><STRONG><a name="[37f]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[371]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[38f]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[384]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[c5]"></a>_fp_digits</STRONG> (Thumb, 428 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[60]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[d0]"></a>_local_sscanf</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
</UL>

<P><STRONG><a name="[d8]"></a>_fp_value</STRONG> (Thumb, 508 bytes, Stack size 88 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
